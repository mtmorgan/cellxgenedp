[{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"installation-and-use","dir":"Articles","previous_headings":"","what":"Installation and use","title":"Discovery and retrieval","text":"package available Bioconductor version 3.15 later. following code installs cellxgenedp Bioconductor Alternatively, install ‘development’ version GitHub (see GitHub.io current documentation) also install additional packages required vignette, use Load package current R session. make extensive use dplyr packages, end vignette use SingleCellExperiment zellkonverter, load well.","code":"if (!\"BiocManager\" %in% rownames(installed.packages()))     install.packages(\"BiocManager\", repos = \"https://CRAN.R-project.org\") BiocManager::install(\"cellxgenedp\") if (!\"remotes\" %in% rownames(installed.packages()))     install.packages(\"remotes\", repos = \"https://CRAN.R-project.org\") remotes::install_github(\"mtmorgan/cellxgenedp\") pkgs <- c(\"tidyr\", \"zellkonverter\", \"SingleCellExperiment\", \"HDF5Array\") required_pkgs <- pkgs[!pkgs %in% rownames(installed.packages())] BiocManager::install(required_pkgs) library(zellkonverter) library(SingleCellExperiment) # load early to avoid masking dplyr::count() library(dplyr) library(cellxgenedp)"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"cxg-provides-a-shiny-interface","dir":"Articles","previous_headings":"","what":"cxg() Provides a ‘shiny’ interface","title":"Discovery and retrieval","text":"following sections outline use cellxgenedp package R script; functionality also available cxg() shiny application, providing easy way identify, download, visualize one several datasets. Start app choose project first tab, dataset visualization, one datasets download!","code":"cxg()"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"collections-datasets-and-files","dir":"Articles","previous_headings":"","what":"Collections, datasets and files","title":"Discovery and retrieval","text":"Retrieve metadata resources available cellxgene data portal using db(): Printing db object provides brief overview available data, well hints, form functions like collections(), exploration. portal organizes data hierarchically, ‘collections’ (research studies, approximately), ‘datasets’, ‘files’. Discover data using corresponding functions. resources unique primary identifier (e.g., file_id) well identifier describing relationship resource components database (e.g., dataset_id). identifiers can used ‘join’ information across tables.","code":"db <- db() db ## cellxgene_db ## number of collections(): 183 ## number of datasets(): 1179 ## number of files(): 2338 collections(db) ## # A tibble: 183 × 18 ##    collection_id    collection_version_id collection_url consortia contact_email ##    <chr>            <chr>                 <chr>          <list>    <chr>         ##  1 ceb895f4-ff9f-4… ee098b5a-4f33-473b-b… https://cellx… <list>    panagiotis.r… ##  2 af893e86-8e9f-4… 768170a6-c590-4900-a… https://cellx… <list>    ruichen@bcm.… ##  3 1d1c7275-476a-4… 609becde-c797-41bb-8… https://cellx… <list>    wey334@g.har… ##  4 1b014f39-f202-4… 1d88cb46-6e84-4b5b-b… https://cellx… <lgl [1]> kimberly.ald… ##  5 48d354f5-a5ca-4… 2862daa3-c933-43c8-9… https://cellx… <list>    Nathan.Salom… ##  6 43d4bb39-21af-4… 78360f02-1acc-415c-a… https://cellx… <lgl [1]> raymond.cho@… ##  7 f7cecffa-00b4-4… 43224f82-db2a-443c-9… https://cellx… <list>    st9@sanger.a… ##  8 f17b9205-f61f-4… 21ff4724-95e2-491b-8… https://cellx… <list>    genevieve.ko… ##  9 64b24fda-6591-4… e414854b-2666-4977-9… https://cellx… <lgl [1]> magness@med.… ## 10 48259aa8-f168-4… 44601b80-bd11-49d8-a… https://cellx… <lgl [1]> wtk22@cam.ac… ## # ℹ 173 more rows ## # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, ## #   description <chr>, doi <chr>, links <list>, name <chr>, ## #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, ## #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date> datasets(db) ## # A tibble: 1,179 × 31 ##    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition ##    <chr>        <chr>              <chr>         <list>   <list> <list>          ##  1 53ce2631-36… 2f17c183-388a-4c0… ceb895f4-ff9… <list>   <list> <list [2]>      ##  2 1d4128f6-c2… 94762ee1-9f9f-49e… ceb895f4-ff9… <list>   <list> <list [2]>      ##  3 ed419b4e-db… 758b30a8-5fb0-46c… af893e86-8e9… <list>   <list> <lgl [1]>       ##  4 aad97cb5-f3… d6966985-89f9-485… af893e86-8e9… <list>   <list> <lgl [1]>       ##  5 8f10185b-e0… 63d7a3a3-9691-41d… af893e86-8e9… <list>   <list> <lgl [1]>       ##  6 359f7af4-87… 0f461193-282f-443… af893e86-8e9… <list>   <list> <lgl [1]>       ##  7 11ef37ee-21… 74253a67-927c-4cd… af893e86-8e9… <list>   <list> <lgl [1]>       ##  8 0129dbd9-a7… a970179d-2e9e-4d2… af893e86-8e9… <list>   <list> <lgl [1]>       ##  9 00e5dedd-b9… 94c0e74c-b269-4ce… af893e86-8e9… <list>   <list> <lgl [1]>       ## 10 d319af7f-be… 3c80a5bb-8c89-433… 1d1c7275-476… <list>   <list> <lgl [1]>       ## # ℹ 1,169 more rows ## # ℹ 25 more variables: cell_count <int>, cell_type <list>, citation <chr>, ## #   development_stage <list>, disease <list>, embeddings <list>, ## #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, ## #   feature_reference <list>, is_primary_data <list>, ## #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, ## #   raw_data_location <chr>, schema_version <chr>, … files(db) ## # A tibble: 2,338 × 4 ##    dataset_id                             filesize filetype url                  ##    <chr>                                     <dbl> <chr>    <chr>                ##  1 53ce2631-3646-4172-bbd9-38b0a44d8214  406108808 H5AD     https://datasets.ce… ##  2 53ce2631-3646-4172-bbd9-38b0a44d8214  399752425 RDS      https://datasets.ce… ##  3 1d4128f6-c27b-40c4-af77-b1c7e2b694e7  906795740 H5AD     https://datasets.ce… ##  4 1d4128f6-c27b-40c4-af77-b1c7e2b694e7 1060800682 RDS      https://datasets.ce… ##  5 ed419b4e-db9b-40f1-8593-68fdf8dfb076 1071401902 H5AD     https://datasets.ce… ##  6 ed419b4e-db9b-40f1-8593-68fdf8dfb076 1419579253 RDS      https://datasets.ce… ##  7 aad97cb5-f375-45ef-ae9d-178e7f5d5180  785137201 H5AD     https://datasets.ce… ##  8 aad97cb5-f375-45ef-ae9d-178e7f5d5180 1025253758 RDS      https://datasets.ce… ##  9 8f10185b-e0b3-46a5-8706-7f1799225d79 3077438912 H5AD     https://datasets.ce… ## 10 8f10185b-e0b3-46a5-8706-7f1799225d79 4090930879 RDS      https://datasets.ce… ## # ℹ 2,328 more rows"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"using-dplyr-to-navigate-data","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Using dplyr to navigate data","title":"Discovery and retrieval","text":"collection may several datasets, datasets may several files. instance, collection datasets can find collection joining collections() table. can take similar strategy identify datasets belonging collection","code":"collection_with_most_datasets <-     datasets(db) |>     count(collection_id, sort = TRUE) |>     slice(1) left_join(     collection_with_most_datasets |> select(collection_id),     collections(db),     by = \"collection_id\" ) |> glimpse() ## Rows: 1 ## Columns: 18 ## $ collection_id         <chr> \"283d65eb-dd53-496d-adb7-7570c7caa443\" ## $ collection_version_id <chr> \"4c16c611-00a9-42f9-a8c4-7b42daa226fe\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/28… ## $ consortia             <list> [\"BRAIN Initiative\", \"CZI Single-Cell Biology\"] ## $ contact_email         <chr> \"kimberly.siletti@ki.se\" ## $ contact_name          <chr> \"Kimberly Siletti\" ## $ curator_name          <chr> \"James Chaffer\" ## $ description           <chr> \"First draft atlas of human brain transcriptomic… ## $ doi                   <chr> \"10.1126/science.add7046\" ## $ links                 <list> [[\"\", \"RAW_DATA\", \"http://data.nemoarchive.org/b… ## $ name                  <chr> \"Human Brain Cell Atlas v1.0\" ## $ publisher_metadata    <list> [[[\"Siletti\", \"Kimberly\"], [\"Hodge\", \"Rebecca\"]… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2023-12-12 ## $ published_at          <date> 2022-12-09 ## $ revised_at            <date> 2023-12-13 left_join(     collection_with_most_datasets |> select(collection_id),     datasets(db),     by = \"collection_id\" ) ## # A tibble: 138 × 31 ##    collection_id   dataset_id dataset_version_id donor_id assay  batch_condition ##    <chr>           <chr>      <chr>              <list>   <list> <list>          ##  1 283d65eb-dd53-… ff7d15fa-… 51e05270-1f00-452… <list>   <list> <list [1]>      ##  2 283d65eb-dd53-… fe1a73ab-… 4e124ecc-7885-465… <list>   <list> <list [1]>      ##  3 283d65eb-dd53-… fbf173f9-… 5a52f557-aeaf-4fc… <list>   <list> <list [1]>      ##  4 283d65eb-dd53-… fa554686-… 6606e9aa-e4c4-452… <list>   <list> <list [1]>      ##  5 283d65eb-dd53-… f9034091-… 8f5b1977-8317-447… <list>   <list> <list [1]>      ##  6 283d65eb-dd53-… f8dda921-… 1ad58833-956c-454… <list>   <list> <list [1]>      ##  7 283d65eb-dd53-… f7d003d4-… 4d002ac1-4671-490… <list>   <list> <list [1]>      ##  8 283d65eb-dd53-… f6d9f2ad-… 2102f4b8-c1fe-4ee… <list>   <list> <list [1]>      ##  9 283d65eb-dd53-… f5a04dff-… b92375fd-dafe-44c… <list>   <list> <list [1]>      ## 10 283d65eb-dd53-… f502c312-… b750310e-1abb-4c7… <list>   <list> <list [1]>      ## # ℹ 128 more rows ## # ℹ 25 more variables: cell_count <int>, cell_type <list>, citation <chr>, ## #   development_stage <list>, disease <list>, embeddings <list>, ## #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, ## #   feature_reference <list>, is_primary_data <list>, ## #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, ## #   raw_data_location <chr>, schema_version <chr>, …"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"facets-provides-information-on-levels-present-in-specific-columns","dir":"Articles","previous_headings":"Collections, datasets and files","what":"facets() provides information on ‘levels’ present in specific columns","title":"Discovery and retrieval","text":"Notice columns ‘lists’ rather atomic vectors like ‘character’ ‘integer’. indicates least datasets one type assay, cell_type, etc. facets() function provides convenient way discovering possible levels column, e.g., assay, organism, self_reported_ethnicity, sex, number datasets label.","code":"datasets(db) |>     select(where(is.list)) ## # A tibble: 1,179 × 15 ##    donor_id    assay      batch_condition cell_type   development_stage disease ##    <list>      <list>     <list>          <list>      <list>            <list>  ##  1 <list [12]> <list [1]> <list [2]>      <list [13]> <list [10]>       <list>  ##  2 <list [12]> <list [1]> <list [2]>      <list [13]> <list [10]>       <list>  ##  3 <list [6]>  <list [1]> <lgl [1]>       <list [4]>  <list [5]>        <list>  ##  4 <list [6]>  <list [1]> <lgl [1]>       <list [1]>  <list [5]>        <list>  ##  5 <list [6]>  <list [1]> <lgl [1]>       <list [2]>  <list [5]>        <list>  ##  6 <list [6]>  <list [1]> <lgl [1]>       <list [1]>  <list [5]>        <list>  ##  7 <list [6]>  <list [1]> <lgl [1]>       <list [1]>  <list [5]>        <list>  ##  8 <list [6]>  <list [1]> <lgl [1]>       <list [6]>  <list [5]>        <list>  ##  9 <list [6]>  <list [1]> <lgl [1]>       <list [2]>  <list [5]>        <list>  ## 10 <list [7]>  <list [2]> <lgl [1]>       <list [1]>  <list [7]>        <list>  ## # ℹ 1,169 more rows ## # ℹ 9 more variables: embeddings <list>, feature_biotype <list>, ## #   feature_reference <list>, is_primary_data <list>, organism <list>, ## #   self_reported_ethnicity <list>, sex <list>, suspension_type <list>, ## #   tissue <list> facets(db, \"assay\") ## # A tibble: 38 × 4 ##    facet label                          ontology_term_id     n ##    <chr> <chr>                          <chr>            <int> ##  1 assay 10x 3' v3                      EFO:0009922        575 ##  2 assay 10x 3' v2                      EFO:0009899        254 ##  3 assay Slide-seqV2                    EFO:0030062        223 ##  4 assay Visium Spatial Gene Expression EFO:0010961        108 ##  5 assay 10x 5' v1                      EFO:0011025         81 ##  6 assay Smart-seq2                     EFO:0008931         63 ##  7 assay 10x multiome                   EFO:0030059         61 ##  8 assay 10x 5' v2                      EFO:0009900         23 ##  9 assay Drop-seq                       EFO:0008722         18 ## 10 assay sci-RNA-seq3                   EFO:0030028         15 ## # ℹ 28 more rows facets(db, \"self_reported_ethnicity\") ## # A tibble: 32 × 4 ##    facet                   label                          ontology_term_id     n ##    <chr>                   <chr>                          <chr>            <int> ##  1 self_reported_ethnicity European                       HANCESTRO:0005     505 ##  2 self_reported_ethnicity unknown                        unknown            411 ##  3 self_reported_ethnicity na                             na                 320 ##  4 self_reported_ethnicity Asian                          HANCESTRO:0008     141 ##  5 self_reported_ethnicity African American               HANCESTRO:0568      61 ##  6 self_reported_ethnicity Hispanic or Latin American     HANCESTRO:0014      54 ##  7 self_reported_ethnicity Native American,Hispanic or L… HANCESTRO:0013,…    50 ##  8 self_reported_ethnicity African American or Afro-Cari… HANCESTRO:0016      32 ##  9 self_reported_ethnicity Greater Middle Eastern  (Midd… HANCESTRO:0015      22 ## 10 self_reported_ethnicity South Asian                    HANCESTRO:0006      11 ## # ℹ 22 more rows facets(db, \"sex\") ## # A tibble: 3 × 4 ##   facet label   ontology_term_id     n ##   <chr> <chr>   <chr>            <int> ## 1 sex   male    PATO:0000384       915 ## 2 sex   female  PATO:0000383       689 ## 3 sex   unknown unknown            173"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"filtering-faceted-columns","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Filtering faceted columns","title":"Discovery and retrieval","text":"Suppose interested finding datasets 10x 3’ v3 assay (ontology_term_id EFO:0009922) containing individuals African American ethnicity, female sex. Use facets_filter() utility function filter data sets needed Use nrow(african_american_female) find number datasets satisfying criteria. looks like cells sequenced (dataset may contain cells several ethnicities, well males individuals unknown gender, know actual number cells available without downloading files). Use left_join identify corresponding collections:","code":"african_american_female <-     datasets(db) |>     filter(         facets_filter(assay, \"ontology_term_id\", \"EFO:0009922\"),         facets_filter(self_reported_ethnicity, \"label\", \"African American\"),         facets_filter(sex, \"label\", \"female\")     ) african_american_female |>     summarise(total_cell_count = sum(cell_count)) ## # A tibble: 1 × 1 ##   total_cell_count ##              <int> ## 1          4320736 ## collections left_join(     african_american_female |> select(collection_id) |> distinct(),     collections(db),     by = \"collection_id\" ) ## # A tibble: 13 × 18 ##    collection_id    collection_version_id collection_url consortia contact_email ##    <chr>            <chr>                 <chr>          <list>    <chr>         ##  1 f17b9205-f61f-4… 21ff4724-95e2-491b-8… https://cellx… <list>    genevieve.ko… ##  2 625f6bf4-2f33-4… 0c0d607f-00b8-4f3d-8… https://cellx… <list>    a5wang@healt… ##  3 c9706a92-0e5f-4… bc627471-7137-4518-a… https://cellx… <list>    hnakshat@iup… ##  4 a98b828a-622a-4… cee0b899-009a-40ec-a… https://cellx… <list>    markusbi@med… ##  5 e1fa9900-3fc9-4… 6016258b-2d18-4ada-a… https://cellx… <lgl [1]> j.ma@yale.edu ##  6 bcb61471-2a44-4… 39fca0ca-2b0f-47b5-9… https://cellx… <list>    info@kpmp.org ##  7 72d37bc9-76cc-4… 3e396ffb-b0d8-4ce4-b… https://cellx… <list>    m.sepp@zmbh.… ##  8 b953c942-f5d8-4… 7727e578-1805-47c8-b… https://cellx… <lgl [1]> icobos@stanf… ##  9 62e8f058-9c37-4… addce074-53d2-4f21-9… https://cellx… <list>    chanj3@mskcc… ## 10 71f4bccf-53d4-4… 5a524bd4-231b-4941-a… https://cellx… <list>    kevinmbyrd@g… ## 11 4195ab4c-20bd-4… f7da9dd1-b0ec-401f-9… https://cellx… <list>    nnavin@mdand… ## 12 6b701826-37bb-4… 95ab05df-9716-4fc8-a… https://cellx… <list>    astreets@ber… ## 13 b9fc3d70-5a72-4… 6701e565-6dfe-4649-b… https://cellx… <list>    bruce.aronow… ## # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, ## #   description <chr>, doi <chr>, links <list>, name <chr>, ## #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, ## #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date>"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"publication-and-other-external-data","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Publication and other external data","title":"Discovery and retrieval","text":"Many collections include publication information external data. information available return value collections(), helper function publisher_metadata(), authors(), links() may facilitate access. Suppose one interested publication “single-cell atlas healthy breast tissues reveals clinically relevant clusters breast epithelial cells”. Discover collections Use collection_id extract publisher metadata (including DOI available) author information Collections may links additional external data, case DOI two links RAW_DATA. Conversely, knowledge DOI, etc., can used discover details corresponding collection.","code":"title_of_interest <- paste(     \"A single-cell atlas of the healthy breast tissues reveals clinically\",     \"relevant clusters of breast epithelial cells\" ) collection_of_interest <-     collections(db) |>     dplyr::filter(startsWith(name, title_of_interest)) collection_of_interest |>     glimpse() ## Rows: 1 ## Columns: 18 ## $ collection_id         <chr> \"c9706a92-0e5f-46c1-96d8-20e42467f287\" ## $ collection_version_id <chr> \"bc627471-7137-4518-a593-2f679bac054e\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/c9… ## $ consortia             <list> [\"CZI Single-Cell Biology\"] ## $ contact_email         <chr> \"hnakshat@iupui.edu\" ## $ contact_name          <chr> \"Harikrishna Nakshatri\" ## $ curator_name          <chr> \"Jennifer Yu-Sheng Chien\" ## $ description           <chr> \"Single-cell RNA sequencing (scRNA-seq) is an ev… ## $ doi                   <chr> \"10.1016/j.xcrm.2021.100219\" ## $ links                 <list> [[\"\", \"RAW_DATA\", \"https://data.humancellatlas.o… ## $ name                  <chr> \"A single-cell atlas of the healthy breast tiss… ## $ publisher_metadata    <list> [[[\"Bhat-Nakshatri\", \"Poornima\"], [\"Gao\", \"Hongy… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2023-12-12 ## $ published_at          <date> 2021-03-25 ## $ revised_at            <date> 2023-12-13 collection_id_of_interest <- pull(collection_of_interest, \"collection_id\") publisher_metadata(db) |>     filter(collection_id == collection_id_of_interest) |>     glimpse() ## Rows: 1 ## Columns: 9 ## $ collection_id   <chr> \"c9706a92-0e5f-46c1-96d8-20e42467f287\" ## $ name            <chr> \"A single-cell atlas of the healthy breast tissues rev… ## $ is_preprint     <lgl> FALSE ## $ journal         <chr> \"Cell Reports Medicine\" ## $ published_at    <date> 2021-03-01 ## $ published_year  <int> 2021 ## $ published_month <int> 3 ## $ published_day   <int> 1 ## $ doi             <chr> NA authors(db) |>     filter(collection_id == collection_id_of_interest) ## # A tibble: 12 × 4 ##    collection_id                        family         given       consortium ##    <chr>                                <chr>          <chr>       <chr>      ##  1 c9706a92-0e5f-46c1-96d8-20e42467f287 Bhat-Nakshatri Poornima    NA         ##  2 c9706a92-0e5f-46c1-96d8-20e42467f287 Gao            Hongyu      NA         ##  3 c9706a92-0e5f-46c1-96d8-20e42467f287 Sheng          Liu         NA         ##  4 c9706a92-0e5f-46c1-96d8-20e42467f287 McGuire        Patrick C.  NA         ##  5 c9706a92-0e5f-46c1-96d8-20e42467f287 Xuei           Xiaoling    NA         ##  6 c9706a92-0e5f-46c1-96d8-20e42467f287 Wan            Jun         NA         ##  7 c9706a92-0e5f-46c1-96d8-20e42467f287 Liu            Yunlong     NA         ##  8 c9706a92-0e5f-46c1-96d8-20e42467f287 Althouse       Sandra K.   NA         ##  9 c9706a92-0e5f-46c1-96d8-20e42467f287 Colter         Austyn      NA         ## 10 c9706a92-0e5f-46c1-96d8-20e42467f287 Sandusky       George      NA         ## 11 c9706a92-0e5f-46c1-96d8-20e42467f287 Storniolo      Anna Maria  NA         ## 12 c9706a92-0e5f-46c1-96d8-20e42467f287 Nakshatri      Harikrishna NA external_links <- links(db) external_links ## # A tibble: 725 × 4 ##    collection_id                        link_name     link_type   link_url       ##    <chr>                                <chr>         <chr>       <chr>          ##  1 ceb895f4-ff9f-403a-b7c3-187a9657ac2c SCP1859       OTHER       https://singl… ##  2 ceb895f4-ff9f-403a-b7c3-187a9657ac2c NA            LAB_WEBSITE https://labs.… ##  3 ceb895f4-ff9f-403a-b7c3-187a9657ac2c NA            OTHER       http://genome… ##  4 ceb895f4-ff9f-403a-b7c3-187a9657ac2c GSE204684     RAW_DATA    https://www.n… ##  5 ceb895f4-ff9f-403a-b7c3-187a9657ac2c analysis code OTHER       https://zenod… ##  6 af893e86-8e9f-41f1-a474-ef05359b1fb7 NA            OTHER       https://retin… ##  7 af893e86-8e9f-41f1-a474-ef05359b1fb7 NA            RAW_DATA    https://data.… ##  8 af893e86-8e9f-41f1-a474-ef05359b1fb7 GSE226108     RAW_DATA    https://www.n… ##  9 1d1c7275-476a-49e2-9022-ad1b1c793594 GSE148077     RAW_DATA    https://www.n… ## 10 1d1c7275-476a-49e2-9022-ad1b1c793594 NA            OTHER       https://singl… ## # ℹ 715 more rows external_links |>     count(link_type) ## # A tibble: 5 × 2 ##   link_type       n ##   <chr>       <int> ## 1 DATA_SOURCE    35 ## 2 LAB_WEBSITE    38 ## 3 OTHER         333 ## 4 PROTOCOL       44 ## 5 RAW_DATA      275 external_links |>     filter(collection_id == collection_id_of_interest) ## # A tibble: 2 × 4 ##   collection_id                        link_name link_type link_url              ##   <chr>                                <chr>     <chr>     <chr>                 ## 1 c9706a92-0e5f-46c1-96d8-20e42467f287 NA        RAW_DATA  https://data.humance… ## 2 c9706a92-0e5f-46c1-96d8-20e42467f287 NA        RAW_DATA  https://www.ncbi.nlm… doi_of_interest <- \"https://doi.org/10.1016/j.stem.2018.12.011\" links(db) |>     filter(link_url == doi_of_interest) |>     left_join(collections(db), by = \"collection_id\") |>     glimpse() ## Rows: 1 ## Columns: 21 ## $ collection_id         <chr> \"b1a879f6-5638-48d3-8f64-f6592c1b1561\" ## $ link_name             <chr> \"PSC-ATO protocol\" ## $ link_type             <chr> \"PROTOCOL\" ## $ link_url              <chr> \"https://doi.org/10.1016/j.stem.2018.12.011\" ## $ collection_version_id <chr> \"aa814356-20ba-4066-88be-fcbf89c84899\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/b1… ## $ consortia             <list> [\"CZI Single-Cell Biology\", \"Wellcome HCA Strate… ## $ contact_email         <chr> \"st9@sanger.ac.uk\" ## $ contact_name          <chr> \"Sarah Teichmann\" ## $ curator_name          <chr> \"Batuhan Cakir\" ## $ description           <chr> \"Single-cell genomics studies have decoded the i… ## $ doi                   <chr> \"10.1126/science.abo0510\" ## $ links                 <list> [[\"scVI Models\", \"DATA_SOURCE\", \"https://develop… ## $ name                  <chr> \"Mapping the developing human immune system acro… ## $ publisher_metadata    <list> [[[\"Suo\", \"Chenqu\"], [\"Dann\", \"Emma\"], [\"Goh\", \"… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2023-12-11 ## $ published_at          <date> 2022-10-04 ## $ revised_at            <date> 2023-12-13"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"visualizing-data-in-cellxgene","dir":"Articles","previous_headings":"","what":"Visualizing data in cellxgene","title":"Discovery and retrieval","text":"Visualization straight-forward dataset_id available. example, visualize first dataset african_american_female, use Visualization interactive process, datasets_visualize() open 5 browser tabs per call.","code":"african_american_female |>     ## use criteria to identify a single dataset (here just the     ## 'first' dataset), then visualize     slice(1) |>     datasets_visualize()"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"file-download-and-use","dir":"Articles","previous_headings":"","what":"File download and use","title":"Discovery and retrieval","text":"Datasets usually contain H5AD (files produced python AnnData module), Rds (serialized files produced R Seurat package). Rds files may unreadable version Seurat used create file different version used read file. therefore focus H5AD files. illustration, find files associated studies African American females download one selected files. choose single dataset H5AD file download downloaded local cache (use internal function cellxgenedp:::.cellxgenedb_cache_path() location cache), process time-consuming first time. H5AD files can converted R / Bioconductor objects using zellkonverter package. SingleCellExperiment object matrix-like object rows corresponding genes columns cells. Thus can easily explore cells present data.","code":"selected_files <-     left_join(         african_american_female |> select(dataset_id),         files(db),         by = \"dataset_id\"     ) local_file <-     selected_files |>     filter(         dataset_id == \"de985818-285f-4f59-9dbd-d74968fddba3\",         filetype == \"H5AD\"     ) |>     files_download(dry.run = FALSE) basename(local_file) ## [1] \"64f14a2b-d754-4bc9-b496-b26f05ebfe4e.h5ad\" h5ad <- readH5AD(local_file, use_hdf5 = TRUE, reader = \"R\") h5ad ## class: SingleCellExperiment  ## dim: 33234 31696  ## metadata(5): citation default_embedding schema_reference schema_version ##   title ## assays(1): X ## rownames(33234): ENSG00000243485 ENSG00000237613 ... ENSG00000277475 ##   ENSG00000268674 ## rowData names(5): feature_is_filtered feature_name feature_reference ##   feature_biotype feature_length ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(36): donor_id self_reported_ethnicity_ontology_term_id ##   ... development_stage observation_joinid ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0): h5ad |>     colData(h5ad) |>     as_tibble() |>     count(sex, donor_id) ## # A tibble: 7 × 3 ##   sex    donor_id                     n ##   <fct>  <fct>                    <int> ## 1 female D1                        2303 ## 2 female D2                         864 ## 3 female D3                        2517 ## 4 female D4                        1771 ## 5 female D5                        2244 ## 6 female D11                       7454 ## 7 female pooled [D9,D7,D8,D10,D6] 14543"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"Discovery and retrieval","text":"Orchestrating Single-Cell Analysis Bioconductor online resource provides excellent introduction analysis visualization single-cell data R / Bioconductor. Extensive opportunities working AnnData objects R using native python interface briefly described , e.g., ?AnnData2SCE help page zellkonverter. hca package provides programmatic access Human Cell Atlas data portal, allowing retrieval primary well derived single-cell data files.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"api-changes","dir":"Articles","previous_headings":"","what":"API changes","title":"Discovery and retrieval","text":"Data access provided CELLxGENE changed new ‘Discover’ API. main functionality cellxgenedp package changed, specific columns removed, replaced added, follows: collections() Removed: access_type, data_submission_policy_version Replaced: updated_at replaced revised_at Added: collection_version_id, collection_url, doi, revising_in, revision_of datasets() Removed: is_valid, processing_status, published, revision, created_at Replaced: dataset_deployments replaced explorer_url, name replaced title, updated_at replaced revised_at Added: dataset_version_id, batch_condition, x_approximate_distribution files() Removed: file_id, filename, s3_uri, user_submitted, created_at, updated_at Added: filesize, url","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/a_using_cellxgenedp.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Discovery and retrieval","text":"","code":"## R version 4.3.2 (2023-10-31) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] cellxgenedp_1.7.2           dplyr_1.1.4                 ##  [3] SingleCellExperiment_1.24.0 SummarizedExperiment_1.32.0 ##  [5] Biobase_2.62.0              GenomicRanges_1.54.1        ##  [7] GenomeInfoDb_1.38.5         IRanges_2.36.0              ##  [9] S4Vectors_0.40.2            BiocGenerics_0.48.1         ## [11] MatrixGenerics_1.14.0       matrixStats_1.2.0           ## [13] zellkonverter_1.12.1        BiocStyle_2.30.0            ##  ## loaded via a namespace (and not attached): ##  [1] tidyselect_1.2.0        filelock_1.0.3          bitops_1.0-7            ##  [4] fastmap_1.1.1           RCurl_1.98-1.14         promises_1.2.1          ##  [7] digest_0.6.34           mime_0.12               lifecycle_1.0.4         ## [10] ellipsis_0.3.2          magrittr_2.0.3          compiler_4.3.2          ## [13] rlang_1.1.3             sass_0.4.8              tools_4.3.2             ## [16] utf8_1.2.4              yaml_2.3.8              knitr_1.45              ## [19] S4Arrays_1.2.0          htmlwidgets_1.6.4       curl_5.2.0              ## [22] reticulate_1.34.0       DelayedArray_0.28.0     abind_1.4-5             ## [25] HDF5Array_1.30.0        withr_3.0.0             purrr_1.0.2             ## [28] desc_1.4.3              grid_4.3.2              fansi_1.0.6             ## [31] xtable_1.8-4            Rhdf5lib_1.24.1         cli_3.6.2               ## [34] rmarkdown_2.25          crayon_1.5.2            ragg_1.2.7              ## [37] generics_0.1.3          httr_1.4.7              rhdf5_2.46.1            ## [40] cachem_1.0.8            stringr_1.5.1           zlibbioc_1.48.0         ## [43] parallel_4.3.2          BiocManager_1.30.22     XVector_0.42.0          ## [46] basilisk_1.14.2         vctrs_0.6.5             Matrix_1.6-1.1          ## [49] jsonlite_1.8.8          dir.expiry_1.10.0       bookdown_0.37           ## [52] systemfonts_1.0.5       jquerylib_0.1.4         glue_1.7.0              ## [55] pkgdown_2.0.7           DT_0.31                 stringi_1.8.3           ## [58] later_1.3.2             tibble_3.2.1            pillar_1.9.0            ## [61] rhdf5filters_1.14.1     basilisk.utils_1.14.1   htmltools_0.5.7         ## [64] GenomeInfoDbData_1.2.11 R6_2.5.1                textshaping_0.3.7       ## [67] evaluate_0.23           shiny_1.8.0             lattice_0.21-9          ## [70] png_0.1-8               memoise_2.0.1           httpuv_1.6.13           ## [73] bslib_0.6.1             rjsoncons_1.1.0         Rcpp_1.0.12             ## [76] SparseArray_1.2.3       xfun_0.41               fs_1.6.3                ## [79] pkgconfig_2.0.3"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Case studies","text":"case study, ensure cellxgenedp (see Bioconductor package landing page, GitHub.io site) installed (additional installation options https://mtmorgan.github.io/cellxgenedp/). Load package.","code":"if (!\"BiocManager\" %in% rownames(installed.packages()))     install.packages(\"BiocManager\", repos = \"https://CRAN.R-project.org\") BiocManager::install(\"cellxgenedp\") library(cellxgenedp)"},{"path":[]},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"challenge-and-solution","dir":"Articles","previous_headings":"Case study: authors & datasets","what":"Challenge and solution","title":"Case studies","text":"case study arose question CZI Science Community Slack. user asked Hi! possible search CELLxGENE identify datasets specific author set authors? Unfortunately, possible CELLxGENE web site – authors associated collections, collections can sorted filtered title (publication / tissue / disease / organism). cellxgenedp solution uses authors() discover authors collections, joins information datasets(). author_datasets provides convenient point make basic queries, e.g., finding authors contributing datasets. Perhaps one interested prolific authors based ‘collections’, rather ‘datasets’. five prolific authors collection datasets associated authors Alternatively, one might interested specific authors. easily accomplished simple filter author_datasets, e.g., carefully constructing data.frame family given names, performing join author_datasets","code":"author_datasets <- left_join(     authors(),     datasets(),     by = \"collection_id\",     relationship = \"many-to-many\" ) author_datasets #> # A tibble: 43,244 × 34 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 ceb895f4-ff9f… Zhu    Kaiyi NA         53ce2631-… 2f17c183-388a-4c0… <list>   #>  2 ceb895f4-ff9f… Zhu    Kaiyi NA         1d4128f6-… 94762ee1-9f9f-49e… <list>   #>  3 ceb895f4-ff9f… Bendl  Jaro… NA         53ce2631-… 2f17c183-388a-4c0… <list>   #>  4 ceb895f4-ff9f… Bendl  Jaro… NA         1d4128f6-… 94762ee1-9f9f-49e… <list>   #>  5 ceb895f4-ff9f… Rahman Samir NA         53ce2631-… 2f17c183-388a-4c0… <list>   #>  6 ceb895f4-ff9f… Rahman Samir NA         1d4128f6-… 94762ee1-9f9f-49e… <list>   #>  7 ceb895f4-ff9f… Vicari Jame… NA         53ce2631-… 2f17c183-388a-4c0… <list>   #>  8 ceb895f4-ff9f… Vicari Jame… NA         1d4128f6-… 94762ee1-9f9f-49e… <list>   #>  9 ceb895f4-ff9f… Colem… Clai… NA         53ce2631-… 2f17c183-388a-4c0… <list>   #> 10 ceb895f4-ff9f… Colem… Clai… NA         1d4128f6-… 94762ee1-9f9f-49e… <list>   #> # ℹ 43,234 more rows #> # ℹ 27 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, … author_datasets |>     count(family, given, sort = TRUE) #> # A tibble: 3,988 × 3 #>    family      given        n #>    <chr>       <chr>    <int> #>  1 Casper      Tamara     232 #>  2 Dee         Nick       232 #>  3 Macosko     Evan Z.    230 #>  4 Chen        Fei        226 #>  5 Ding        Song-Lin   226 #>  6 Murray      Evan       226 #>  7 Hirschstein Daniel     217 #>  8 Travaglini  Kyle J.    202 #>  9 Nyhus       Julie      201 #> 10 Lein        Ed S.      198 #> # ℹ 3,978 more rows prolific_authors <-     authors() |>     count(family, given, sort = TRUE) |>     slice(1:5) prolific_authors #> # A tibble: 5 × 3 #>   family    given          n #>   <chr>     <chr>      <int> #> 1 Teichmann Sarah A.      23 #> 2 Regev     Aviv          14 #> 3 Haniffa   Muzlifah      12 #> 4 Meyer     Kerstin B.    12 #> 5 Polanski  Krzysztof     12 right_join(     author_datasets,     prolific_authors,     by = c(\"family\", \"given\") ) #> # A tibble: 376 × 35 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 1d1c7275-476a… Regev  Aviv  NA         d319af7f-… 3c80a5bb-8c89-433… <list>   #>  2 1d1c7275-476a… Regev  Aviv  NA         bc7260e0-… cab44f51-3ebf-4c9… <list>   #>  3 1d1c7275-476a… Regev  Aviv  NA         8623d55f-… f7e3732a-eea9-49a… <list>   #>  4 1d1c7275-476a… Regev  Aviv  NA         7b75b2c4-… 4b53f264-a62e-41a… <list>   #>  5 1d1c7275-476a… Regev  Aviv  NA         5cdbb2ea-… 9944528e-f23b-4d8… <list>   #>  6 1d1c7275-476a… Regev  Aviv  NA         2f6a20f1-… 129c17aa-3d9d-435… <list>   #>  7 f7cecffa-00b4… Meyer  Kers… NA         eaf0c852-… ec370e4c-4ce8-435… <list>   #>  8 f7cecffa-00b4… Meyer  Kers… NA         5af90777-… 4fd0f389-89ac-4a6… <list>   #>  9 f7cecffa-00b4… Meyer  Kers… NA         318cb2a6-… 99d31e0c-4ccf-42c… <list>   #> 10 f7cecffa-00b4… Teich… Sara… NA         eaf0c852-… ec370e4c-4ce8-435… <list>   #> # ℹ 366 more rows #> # ℹ 28 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, … author_datasets |>     filter(         family %in% c(\"Teichmann\", \"Regev\", \"Haniffa\")     ) #> # A tibble: 250 × 34 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 1d1c7275-476a… Regev  Aviv  NA         d319af7f-… 3c80a5bb-8c89-433… <list>   #>  2 1d1c7275-476a… Regev  Aviv  NA         bc7260e0-… cab44f51-3ebf-4c9… <list>   #>  3 1d1c7275-476a… Regev  Aviv  NA         8623d55f-… f7e3732a-eea9-49a… <list>   #>  4 1d1c7275-476a… Regev  Aviv  NA         7b75b2c4-… 4b53f264-a62e-41a… <list>   #>  5 1d1c7275-476a… Regev  Aviv  NA         5cdbb2ea-… 9944528e-f23b-4d8… <list>   #>  6 1d1c7275-476a… Regev  Aviv  NA         2f6a20f1-… 129c17aa-3d9d-435… <list>   #>  7 f7cecffa-00b4… Teich… Sara… NA         eaf0c852-… ec370e4c-4ce8-435… <list>   #>  8 f7cecffa-00b4… Teich… Sara… NA         5af90777-… 4fd0f389-89ac-4a6… <list>   #>  9 f7cecffa-00b4… Teich… Sara… NA         318cb2a6-… 99d31e0c-4ccf-42c… <list>   #> 10 2d2e2acd-dade… Teich… Sara… NA         f9846bb4-… f0b11a56-236f-4e7… <list>   #> # ℹ 240 more rows #> # ℹ 27 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, … authors_of_interest <-     tibble(         family = c(\"Teichmann\", \"Regev\", \"Haniffa\"),         given = c(\"Sarah A.\", \"Aviv\", \"Muzlifah\")     ) right_join(     author_datasets,     authors_of_interest,     by = c(\"family\", \"given\") ) #> # A tibble: 240 × 34 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 1d1c7275-476a… Regev  Aviv  NA         d319af7f-… 3c80a5bb-8c89-433… <list>   #>  2 1d1c7275-476a… Regev  Aviv  NA         bc7260e0-… cab44f51-3ebf-4c9… <list>   #>  3 1d1c7275-476a… Regev  Aviv  NA         8623d55f-… f7e3732a-eea9-49a… <list>   #>  4 1d1c7275-476a… Regev  Aviv  NA         7b75b2c4-… 4b53f264-a62e-41a… <list>   #>  5 1d1c7275-476a… Regev  Aviv  NA         5cdbb2ea-… 9944528e-f23b-4d8… <list>   #>  6 1d1c7275-476a… Regev  Aviv  NA         2f6a20f1-… 129c17aa-3d9d-435… <list>   #>  7 f7cecffa-00b4… Teich… Sara… NA         eaf0c852-… ec370e4c-4ce8-435… <list>   #>  8 f7cecffa-00b4… Teich… Sara… NA         5af90777-… 4fd0f389-89ac-4a6… <list>   #>  9 f7cecffa-00b4… Teich… Sara… NA         318cb2a6-… 99d31e0c-4ccf-42c… <list>   #> 10 2d2e2acd-dade… Teich… Sara… NA         f9846bb4-… f0b11a56-236f-4e7… <list>   #> # ℹ 230 more rows #> # ℹ 27 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, …"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"areas-of-interest","dir":"Articles","previous_headings":"Case study: authors & datasets","what":"Areas of interest","title":"Case studies","text":"several interesting questions suggest , several areas additional work required. might interesting identify authors working similar disease, areas interest. disease column author_datasets table list. single dataset may involve one disease. Furthermore, entry list contains two elements, label ontology_term_id disease. two approaches working data. One approach working data uses facilities cellxgenedp outlined accompanying article. Discover possible diseases. Focus COVID-19, use facets_filter() select relevant author-dataset combinations. Authors contributing datasets second approach follow practices R Data Science, disease column can ‘unnested’ twice, first time expand author_datasets table disease, second time separate two columns disease. Author-dataset combinations associated COVID-19, contributors datasets, computations earlier iteration using functionality cellxgenedp. resource might interest [OSLr][] package article illustrating ontologies used CELLxGENE can manipulated , e.g., identify studies terms derive common term (e.g., disease terms related ‘carcinoma’).","code":"author_datasets |>     select(family, given, dataset_id, disease) #> # A tibble: 43,244 × 4 #>    family  given    dataset_id                           disease    #>    <chr>   <chr>    <chr>                                <list>     #>  1 Zhu     Kaiyi    53ce2631-3646-4172-bbd9-38b0a44d8214 <list [1]> #>  2 Zhu     Kaiyi    1d4128f6-c27b-40c4-af77-b1c7e2b694e7 <list [1]> #>  3 Bendl   Jaroslav 53ce2631-3646-4172-bbd9-38b0a44d8214 <list [1]> #>  4 Bendl   Jaroslav 1d4128f6-c27b-40c4-af77-b1c7e2b694e7 <list [1]> #>  5 Rahman  Samir    53ce2631-3646-4172-bbd9-38b0a44d8214 <list [1]> #>  6 Rahman  Samir    1d4128f6-c27b-40c4-af77-b1c7e2b694e7 <list [1]> #>  7 Vicari  James M. 53ce2631-3646-4172-bbd9-38b0a44d8214 <list [1]> #>  8 Vicari  James M. 1d4128f6-c27b-40c4-af77-b1c7e2b694e7 <list [1]> #>  9 Coleman Claire   53ce2631-3646-4172-bbd9-38b0a44d8214 <list [1]> #> 10 Coleman Claire   1d4128f6-c27b-40c4-af77-b1c7e2b694e7 <list [1]> #> # ℹ 43,234 more rows facets(db(), \"disease\") #> # A tibble: 103 × 4 #>    facet   label                                          ontology_term_id     n #>    <chr>   <chr>                                          <chr>            <int> #>  1 disease normal                                         PATO:0000461      1001 #>  2 disease COVID-19                                       MONDO:0100096       60 #>  3 disease dementia                                       MONDO:0001627       50 #>  4 disease diabetic kidney disease                        MONDO:0005016       26 #>  5 disease myocardial infarction                          MONDO:0005068       26 #>  6 disease autosomal dominant polycystic kidney disease   MONDO:0004691       24 #>  7 disease Alzheimer disease                              MONDO:0004975       15 #>  8 disease lung adenocarcinoma                            MONDO:0005061       11 #>  9 disease small cell lung carcinoma                      MONDO:0008433       11 #> 10 disease arrhythmogenic right ventricular cardiomyopat… MONDO:0016587        9 #> # ℹ 93 more rows author_datasets |>     filter(facets_filter(disease, \"label\", \"COVID-19\")) #> # A tibble: 1,766 × 34 #>    collection_id  family given consortium dataset_id dataset_version_id donor_id #>    <chr>          <chr>  <chr> <chr>      <chr>      <chr>              <list>   #>  1 a72afd53-ab92… Wilk   Aaro… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #>  2 a72afd53-ab92… Rusta… Arjun NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #>  3 a72afd53-ab92… Zhao   Nanc… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #>  4 a72afd53-ab92… Roque  Jona… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #>  5 a72afd53-ab92… Martí… Giov… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #>  6 a72afd53-ab92… McKec… Juli… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #>  7 a72afd53-ab92… Ivison Geof… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #>  8 a72afd53-ab92… Ranga… Than… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #>  9 a72afd53-ab92… Verga… Rose… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #> 10 a72afd53-ab92… Hollis Tayl… NA         456e8b9b-… a5ac4378-58f6-4ff… <list>   #> # ℹ 1,756 more rows #> # ℹ 27 more variables: assay <list>, batch_condition <list>, cell_count <int>, #> #   cell_type <list>, citation <chr>, development_stage <list>, disease <list>, #> #   embeddings <list>, explorer_url <chr>, feature_biotype <list>, #> #   feature_count <int>, feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, … author_datasets |>     filter(facets_filter(disease, \"label\", \"COVID-19\")) |>     count(family, given, sort = TRUE) #> # A tibble: 794 × 3 #>    family       given           n #>    <chr>        <chr>       <int> #>  1 Farber       Donna L.       29 #>  2 Guo          Xinzheng V.    28 #>  3 Saqi         Anjali         28 #>  4 Baldwin      Matthew R.     27 #>  5 Chait        Michael        27 #>  6 Connors      Thomas J.      27 #>  7 Davis-Porada Julia          27 #>  8 Dogra        Pranay         27 #>  9 Gray         Joshua I.      27 #> 10 Idzikowski   Emma           27 #> # ℹ 784 more rows author_dataset_diseases <-     author_datasets |>     select(family, given, dataset_id, disease) |>     tidyr::unnest_longer(disease) |>     tidyr::unnest_wider(disease) author_dataset_diseases #> # A tibble: 57,097 × 5 #>    family  given    dataset_id                           label  ontology_term_id #>    <chr>   <chr>    <chr>                                <chr>  <chr>            #>  1 Zhu     Kaiyi    53ce2631-3646-4172-bbd9-38b0a44d8214 normal PATO:0000461     #>  2 Zhu     Kaiyi    1d4128f6-c27b-40c4-af77-b1c7e2b694e7 normal PATO:0000461     #>  3 Bendl   Jaroslav 53ce2631-3646-4172-bbd9-38b0a44d8214 normal PATO:0000461     #>  4 Bendl   Jaroslav 1d4128f6-c27b-40c4-af77-b1c7e2b694e7 normal PATO:0000461     #>  5 Rahman  Samir    53ce2631-3646-4172-bbd9-38b0a44d8214 normal PATO:0000461     #>  6 Rahman  Samir    1d4128f6-c27b-40c4-af77-b1c7e2b694e7 normal PATO:0000461     #>  7 Vicari  James M. 53ce2631-3646-4172-bbd9-38b0a44d8214 normal PATO:0000461     #>  8 Vicari  James M. 1d4128f6-c27b-40c4-af77-b1c7e2b694e7 normal PATO:0000461     #>  9 Coleman Claire   53ce2631-3646-4172-bbd9-38b0a44d8214 normal PATO:0000461     #> 10 Coleman Claire   1d4128f6-c27b-40c4-af77-b1c7e2b694e7 normal PATO:0000461     #> # ℹ 57,087 more rows author_dataset_diseases |>     filter(label == \"COVID-19\")  author_dataset_diseases |>     filter(label == \"COVID-19\") |>     count(family, given, sort = TRUE)"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"collaboration","dir":"Articles","previous_headings":"Case study: authors & datasets","what":"Collaboration","title":"Case studies","text":"TODO. might interesting know authors collaborated one another. can computed author_datasets table, following approaches developed grantpubcite package identify collaborations projects NIH-funded ITCR program. See graph visualization ITCR collaboration section inspiration.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"duplicate-collection-author-combinations","dir":"Articles","previous_headings":"Case study: authors & datasets","what":"Duplicate collection-author combinations","title":"Case studies","text":"authors 5154 collection-author combinations. expect distinct (row identifying unique collection-author combination). true Duplicated data Discover details first duplicated collection, e5f58829-1a66-40b5-a624-9046778e74f5 author information comes publisher_metadata column ‘list--lists’, relevant information elements first list relevant information authors field, 221 Inspection shows four authors family name Pisco given name Angela Oliveira: appears data provided CZI indeed includes duplicate author names. pragmatic perspective, might make sense remove duplicate entries authors -stream analysis. Tools found useful working list--lists style data rare listviewer::jsonedit() visualization, rjsoncons filtering querying data using JSONpointer, JSONpath, JMESpath expression (R-centric tool purrr package).","code":"authors <- authors() authors #> # A tibble: 5,154 × 4 #>    collection_id                        family   given      consortium #>    <chr>                                <chr>    <chr>      <chr>      #>  1 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Zhu      Kaiyi      NA         #>  2 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Bendl    Jaroslav   NA         #>  3 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Rahman   Samir      NA         #>  4 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Vicari   James M.   NA         #>  5 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Coleman  Claire     NA         #>  6 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Clarence Tereza     NA         #>  7 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Latouche Ovaun      NA         #>  8 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Tsankova Nadejda M. NA         #>  9 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Li       Aiqun      NA         #> 10 ceb895f4-ff9f-403a-b7c3-187a9657ac2c Brennand Kristen J. NA         #> # ℹ 5,144 more rows nrow(authors) == nrow(distinct(authors)) #> [1] FALSE authors |>      count(collection_id, family, given, consortium, sort = TRUE) |>     filter(n > 1) #> # A tibble: 73 × 5 #>    collection_id                        family     given        consortium     n #>    <chr>                                <chr>      <chr>        <chr>      <int> #>  1 e5f58829-1a66-40b5-a624-9046778e74f5 Pisco      Angela Oliv… NA             4 #>  2 e5f58829-1a66-40b5-a624-9046778e74f5 Crasta     Sheela       NA             3 #>  3 e5f58829-1a66-40b5-a624-9046778e74f5 Swift      Michael      NA             3 #>  4 e5f58829-1a66-40b5-a624-9046778e74f5 Travaglini Kyle J.      NA             3 #>  5 e5f58829-1a66-40b5-a624-9046778e74f5 de Morree  Antoine      NA             3 #>  6 51544e44-293b-4c2b-8c26-560678423380 Betts      Michael R.   NA             2 #>  7 51544e44-293b-4c2b-8c26-560678423380 Faryabi    Robert B.    NA             2 #>  8 51544e44-293b-4c2b-8c26-560678423380 Fasolino   Maria        NA             2 #>  9 51544e44-293b-4c2b-8c26-560678423380 Feldman    Michael      NA             2 #> 10 51544e44-293b-4c2b-8c26-560678423380 Goldman    Naomi        NA             2 #> # ℹ 63 more rows duplicate_authors <-     collections() |>     filter(collection_id == \"e5f58829-1a66-40b5-a624-9046778e74f5\") duplicate_authors #> # A tibble: 1 × 18 #>   collection_id     collection_version_id collection_url consortia contact_email #>   <chr>             <chr>                 <chr>          <list>    <chr>         #> 1 e5f58829-1a66-40… 0a47227f-aab6-4c3d-b… https://cellx… <list>    angela.pisco… #> # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, #> #   description <chr>, doi <chr>, links <list>, name <chr>, #> #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, #> #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date> publisher_metadata <-     duplicate_authors |>     pull(publisher_metadata) names(publisher_metadata[[1]]) #> [1] \"authors\"         \"is_preprint\"     \"journal\"         \"published_at\"    #> [5] \"published_day\"   \"published_month\" \"published_year\" length(publisher_metadata[[1]][[\"authors\"]]) #> [1] 221 deduplicated_authors <- distinct(authors)"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"what-is-an-author","dir":"Articles","previous_headings":"Case study: authors & datasets > Duplicate collection-author combinations","what":"What is an ‘author’?","title":"Case studies","text":"combination family given name may refer two () different individuals (e.g., two individuals named ‘Martin Morgan’), single individual may recorded two different names (e.g., given name sometimes ‘Martin’ sometimes ‘Martin T.’). clear resolved; recording ORCID identifiers migth help disambiguation.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"case-study-using-ontology-to-identify-datasets","dir":"Articles","previous_headings":"","what":"Case study: using ontology to identify datasets","title":"Case studies","text":"case study developed response following Slack question: CELLxGENE’s webpage using different ontologies displaying easy interogate manner (choosing amongst 3 possible coarseness cell types, tissues age) wondering simplified tree 3 subgroups cell type, tissue age categories available somewhere? indicated question, CELLxGENE provides access ontologies hand-curated three-tiered classification specific facets; tiers can retrieved publicly available code, one might want develop flexible principled approach. CELLxGENE dataset facets like ‘disease’ ‘cell type’ use terms ontologies. Ontologies arrange terms directed acyclic graphs, use ontologies can useful identify related datasets. instance, one might interesed cancer-related datasets (derived ‘carcinoma’ term corresponding ontology) general, rather , e.g., ‘B-cell non-Hodgkins lymphoma’. exploring question R, found developing OLSr package query process ontologies EMBL-EBI Ontology Lookup Service. See ‘Case Study: CELLxGENE Ontologies’ article OLSr package full details.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/b_case_studies.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Case studies","text":"","code":"#> R version 4.3.2 (2023-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] cellxgenedp_1.7.2 dplyr_1.1.4       BiocStyle_2.30.0  #>  #> loaded via a namespace (and not attached): #>  [1] tidyr_1.3.0         sass_0.4.8          utf8_1.2.4          #>  [4] generics_0.1.3      stringi_1.8.3       digest_0.6.34       #>  [7] magrittr_2.0.3      evaluate_0.23       bookdown_0.37       #> [10] fastmap_1.1.1       jsonlite_1.8.8      promises_1.2.1      #> [13] BiocManager_1.30.22 httr_1.4.7          purrr_1.0.2         #> [16] fansi_1.0.6         textshaping_0.3.7   jquerylib_0.1.4     #> [19] cli_3.6.2           shiny_1.8.0         rlang_1.1.3         #> [22] ellipsis_0.3.2      withr_3.0.0         cachem_1.0.8        #> [25] yaml_2.3.8          tools_4.3.2         memoise_2.0.1       #> [28] httpuv_1.6.13       DT_0.31             curl_5.2.0          #> [31] vctrs_0.6.5         rjsoncons_1.1.0     R6_2.5.1            #> [34] mime_0.12           lifecycle_1.0.4     stringr_1.5.1       #> [37] fs_1.6.3            htmlwidgets_1.6.4   ragg_1.2.7          #> [40] pkgconfig_2.0.3     desc_1.4.3          pkgdown_2.0.7       #> [43] pillar_1.9.0        bslib_0.6.1         later_1.3.2         #> [46] glue_1.7.0          Rcpp_1.0.12         systemfonts_1.0.5   #> [49] xfun_0.41           tibble_3.2.1        tidyselect_1.2.0    #> [52] knitr_1.45          xtable_1.8-4        htmltools_0.5.7     #> [55] rmarkdown_2.25      compiler_4.3.2"},{"path":"https://mtmorgan.github.io/cellxgenedp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer. Kayla Interdonato. Author.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M, Interdonato K (2024). cellxgenedp: Discover Access Single Cell Data Sets CELLxGENE Data Portal. R package version 1.7.2, https://github.com/mtmorgan/cellxgenedp, https://mtmorgan.github.io/cellxgenedp/.","code":"@Manual{,   title = {cellxgenedp: Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal},   author = {Martin Morgan and Kayla Interdonato},   year = {2024},   note = {R package version 1.7.2, https://github.com/mtmorgan/cellxgenedp},   url = {https://mtmorgan.github.io/cellxgenedp/}, }"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"introduction-to-cellxgenedp","dir":"","previous_headings":"","what":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"cellxgene data portal https://cellxgene.cziscience.com/ provides graphical user interface collections single-cell sequence data processed standard ways ‘count matrix’ summaries. cellxgenedp package provides alternative, R-based inteface, allowind data discovery, viewing, downloading.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"package available Bioconductor version 3.15 later. following code installs cellxgenedp Alternatively, install ‘development’ version GitHub also install additional packages required vignette, use","code":"if (!\"BiocManager\" %in% rownames(installed.packages()))     install.packages(\"BiocManager\", repos = \"https://CRAN.R-project.org\") BiocManager::install(\"cellxgenedp\") if (!\"remotes\" %in% rownames(installed.packages()))     install.packages(\"remotes\", repos = \"https://CRAN.R-project.org\") remotes::install_github(\"mtmorgan/cellxgenedp\") pkgs <- c(\"tidyr\", \"zellkonverter\", \"SingleCellExperiment\", \"HDF5Array\") required_pkgs <- pkgs[!pkgs %in% rownames(installed.packages())] BiocManager::install(required_pkgs)"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"Load package current R session. make extensive use dplyr packages, end vignette use SingleCellExperiment zellkonverter, load well.","code":"suppressPackageStartupMessages({     library(dplyr)     library(cellxgenedp) })"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"shiny","dir":"","previous_headings":"","what":"Shiny","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"cxg() provides ‘shiny’ interface allowing discovery collections datasets, visualization selected datasets cellxgene data portal, download datasets use R.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"next-steps","dir":"","previous_headings":"","what":"Next steps","title":"Discover and Access Single Cell Data Sets in the CELLxGENE Data Portal","text":"View artcle Discover download datasets files cellxgene data portal.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"Shiny application discovering, viewing, downloading cellxgene data","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"","code":"cxg(as = c(\"tibble\", \"sce\"))"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"character(1) Return value quiting shiny application. \"tibble\" returns tibble describing selected datasets (including location disk downloaded file). \"sce\" returns list dataset files imported R SingleCellExperiment objects.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"cxg() returns either tibble describing datasets selected shiny application, list datasets imported R SingleCellExperiment objects.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"","code":"# \\donttest{ if (interactive())     cxg() # }"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve updated cellxgene database metadata — db","title":"Retrieve updated cellxgene database metadata — db","text":"Retrieve updated cellxgene database metadata","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve updated cellxgene database metadata — db","text":"","code":"db(overwrite = .db_online() && .db_first())"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve updated cellxgene database metadata — db","text":"overwrite logical(1) indicating whether database collections updated internet (default, internet available , interactive session, user requests update), read disk (assuming previous successful access internet).  overwrite = FALSE might useful reproducibility, testing, working environment restricted internet access.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve updated cellxgene database metadata — db","text":"db() returns object class 'cellxgene_db', summarizing available collections, datasets, files.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve updated cellxgene database metadata — db","text":"database retrieved cellxgene data portal web site. 'collections' metadata retrieved call; metadata collection cached locally re-use.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve updated cellxgene database metadata — db","text":"","code":"db() #> cellxgene_db #> number of collections(): 183 #> number of datasets(): 1179 #> number of files(): 2338"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":null,"dir":"Reference","previous_headings":"","what":"Facets available for querying cellxgene data — FACETS","title":"Facets available for querying cellxgene data — FACETS","text":"FACETS character vector common fields used subset cellxgene data. facets() used query cellxgene database current values one facets. facets_filter() provides convenient way filter facets based label ontology term.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facets available for querying cellxgene data — FACETS","text":"","code":"FACETS  facets(cellxgene_db = db(), facets = FACETS)  facets_filter(facet, key = c(\"label\", \"ontology_term_id\"), value, exact = TRUE)"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Facets available for querying cellxgene data — FACETS","text":"FACETS object class character length 8.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facets available for querying cellxgene data — FACETS","text":"cellxgene_db (optional) cellxgene_db object, returned db(). facets character() vector corersponding one facets FACETS. facet column containing faceted information, e.g., sex datasets(db). key character(1) identifying whether value label ontology_term_id. value character() value label ontology term filter . value may vector length(value) > 0 exact matchs (exact = TRUE, default), character(1) regular expression. exact logical(1) whether values match exactly (default, TRUE) regular expression (FALSE).","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facets available for querying cellxgene data — FACETS","text":"facets() returns tibble columns facet, label, ontology_term_id, n, number times facet label used database. facets_filter() returns logical vector length equal length (number rows) facet, TRUE indicating value key present dataset.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facets available for querying cellxgene data — FACETS","text":"","code":"f <- facets()  ## levels of each facet f |>     dplyr::count(facet) #> # A tibble: 8 × 2 #>   facet                       n #>   <chr>                   <int> #> 1 assay                      38 #> 2 cell_type                 773 #> 3 development_stage         232 #> 4 disease                   103 #> 5 organism                    7 #> 6 self_reported_ethnicity    32 #> 7 sex                         3 #> 8 tissue                    378  ## same as facets(, facets = \"organism\") f |>     dplyr::filter(facet == \"organism\") #> # A tibble: 7 × 4 #>   facet    label                 ontology_term_id     n #>   <chr>    <chr>                 <chr>            <int> #> 1 organism Homo sapiens          NCBITaxon:9606     866 #> 2 organism Mus musculus          NCBITaxon:10090    276 #> 3 organism Callithrix jacchus    NCBITaxon:9483      28 #> 4 organism Macaca mulatta        NCBITaxon:9544      19 #> 5 organism Sus scrofa domesticus NCBITaxon:9825       3 #> 6 organism Pan troglodytes       NCBITaxon:9598       2 #> 7 organism Gorilla gorilla       NCBITaxon:9593       1  db <- db() ds <- datasets(db)  ## datasets with African American females ds |>     dplyr::filter(         facets_filter(self_reported_ethnicity, \"label\", \"African American\"),         facets_filter(sex, \"label\", \"female\")     ) #> # A tibble: 52 × 31 #>    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition #>    <chr>        <chr>              <chr>         <list>   <list> <list>          #>  1 94c41723-b2… 4a9bcef2-02db-49f… f17b9205-f61… <list>   <list> <lgl [1]>       #>  2 3de0ad6d-43… 6934232e-4db4-423… 625f6bf4-2f3… <list>   <list> <lgl [1]>       #>  3 de985818-28… 64f14a2b-d754-4bc… c9706a92-0e5… <list>   <list> <lgl [1]>       #>  4 0b4a15a7-4e… 6616739c-0b4a-4a4… a98b828a-622… <list>   <list> <lgl [1]>       #>  5 3c361813-5d… 2e0b82ee-5320-437… e1fa9900-3fc… <list>   <list> <lgl [1]>       #>  6 32b9bdce-24… 04019af8-aaf3-446… bcb61471-2a4… <list>   <list> <lgl [1]>       #>  7 0b75c598-08… 6568e80d-b8d8-4a5… bcb61471-2a4… <list>   <list> <lgl [1]>       #>  8 07854d9c-53… bf5607d5-82c3-46f… bcb61471-2a4… <list>   <list> <lgl [1]>       #>  9 e40c6272-af… 23d7646e-5ed0-467… a48f5033-343… <list>   <list> <lgl [1]>       #> 10 d6dfdef1-40… 5a2b8d31-f043-48e… a48f5033-343… <list>   <list> <lgl [1]>       #> # ℹ 42 more rows #> # ℹ 25 more variables: cell_count <int>, cell_type <list>, citation <chr>, #> #   development_stage <list>, disease <list>, embeddings <list>, #> #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, #> #   feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, …  ## datasets with non-European, known ethnicity facets(db, \"self_reported_ethnicity\") #> # A tibble: 32 × 4 #>    facet                   label                          ontology_term_id     n #>    <chr>                   <chr>                          <chr>            <int> #>  1 self_reported_ethnicity European                       HANCESTRO:0005     505 #>  2 self_reported_ethnicity unknown                        unknown            411 #>  3 self_reported_ethnicity na                             na                 320 #>  4 self_reported_ethnicity Asian                          HANCESTRO:0008     141 #>  5 self_reported_ethnicity African American               HANCESTRO:0568      61 #>  6 self_reported_ethnicity Hispanic or Latin American     HANCESTRO:0014      54 #>  7 self_reported_ethnicity Native American,Hispanic or L… HANCESTRO:0013,…    50 #>  8 self_reported_ethnicity African American or Afro-Cari… HANCESTRO:0016      32 #>  9 self_reported_ethnicity Greater Middle Eastern  (Midd… HANCESTRO:0015      22 #> 10 self_reported_ethnicity South Asian                    HANCESTRO:0006      11 #> # ℹ 22 more rows ds |>     dplyr::filter(         !facets_filter(             self_reported_ethnicity, \"label\", c(\"European\", \"na\", \"unknown\")         )     ) #> # A tibble: 25 × 31 #>    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition #>    <chr>        <chr>              <chr>         <list>   <list> <list>          #>  1 e6a11140-25… 4866a804-37eb-436… e5f58829-1a6… <list>   <list> <lgl [1]>       #>  2 6ec405bb-47… c524a1cb-e823-478… e5f58829-1a6… <list>   <list> <lgl [1]>       #>  3 2ba40233-85… a1e426d5-f575-445… e5f58829-1a6… <list>   <list> <lgl [1]>       #>  4 2423ce2c-31… 80e4bc4f-e0a9-467… e5f58829-1a6… <list>   <list> <lgl [1]>       #>  5 2adb1f8a-a6… 1b7484e3-83a0-47f… 38833785-fac… <list>   <list> <lgl [1]>       #>  6 be884a28-0e… 7dd2aaf8-1714-49b… 10bf5c50-8d8… <list>   <list> <lgl [1]>       #>  7 c8f83821-a2… 10ecac59-8895-492… 9d63fcf1-5ca… <list>   <list> <lgl [1]>       #>  8 c05e6940-72… 80a4eb91-dab2-40d… 9d63fcf1-5ca… <list>   <list> <lgl [1]>       #>  9 894573ad-49… e385cf86-3c0b-422… 9d63fcf1-5ca… <list>   <list> <lgl [1]>       #> 10 84242d25-f6… 7ce8fb90-86fa-4ea… 9d63fcf1-5ca… <list>   <list> <lgl [1]>       #> # ℹ 15 more rows #> # ℹ 25 more variables: cell_count <int>, cell_type <list>, citation <chr>, #> #   development_stage <list>, disease <list>, embeddings <list>, #> #   explorer_url <chr>, feature_biotype <list>, feature_count <int>, #> #   feature_reference <list>, is_primary_data <list>, #> #   mean_genes_per_cell <dbl>, organism <list>, primary_cell_count <int>, #> #   raw_data_location <chr>, schema_version <chr>, …"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query cellxgene collections, datasets, and files — collections","title":"Query cellxgene collections, datasets, and files — collections","text":"files_download() retrieves one cellxgene files cache local system. links(), authors() publisher_metadata() helper functions extract 'nested' information collections.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query cellxgene collections, datasets, and files — collections","text":"","code":"collections(cellxgene_db = db())  datasets(cellxgene_db = db())  datasets_visualize(tbl)  files(cellxgene_db = db())  files_download(tbl, dry.run = TRUE, cache.path = .cellxgene_cache_path())  links(cellxgene_db = db())  authors(cellxgene_db = db())  publisher_metadata(cellxgene_db = db())"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query cellxgene collections, datasets, and files — collections","text":"cellxgene_db optional 'cellxgene_db' object, returned db(). tbl tibble() typically derived datasets(db) files(db) containing columns dataset_id (datasets_visualize()), columns dataset_id, file_id, filetype (files_download()). dry.run logical(1) indicating whether (often large) file(s) tbl downloaded local cache. Files downloaded dry.run = TRUE (default). cache.path character(1) directory cache downloaded files. directory must already exist. default tools::R_user_dir(\"cellxgenedp\", \"cache\"), package-specific path user home directory.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query cellxgene collections, datasets, and files — collections","text":"function returns tibble describing corresponding component database. files_download() returns character() vector paths local files. links() returns tibble external links associated collection. Common links includ DOI, raw data / data sources, lab websites. authors() returns tibble authors associated collection. publisher_metadata() returns tibble publisher metadata (journal, publicate date, doi) associated collection.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query cellxgene collections, datasets, and files — collections","text":"","code":"db <- db()  collections(db) #> # A tibble: 183 × 18 #>    collection_id    collection_version_id collection_url consortia contact_email #>    <chr>            <chr>                 <chr>          <list>    <chr>         #>  1 ceb895f4-ff9f-4… ee098b5a-4f33-473b-b… https://cellx… <list>    panagiotis.r… #>  2 af893e86-8e9f-4… 768170a6-c590-4900-a… https://cellx… <list>    ruichen@bcm.… #>  3 1d1c7275-476a-4… 609becde-c797-41bb-8… https://cellx… <list>    wey334@g.har… #>  4 1b014f39-f202-4… 1d88cb46-6e84-4b5b-b… https://cellx… <lgl [1]> kimberly.ald… #>  5 48d354f5-a5ca-4… 2862daa3-c933-43c8-9… https://cellx… <list>    Nathan.Salom… #>  6 43d4bb39-21af-4… 78360f02-1acc-415c-a… https://cellx… <lgl [1]> raymond.cho@… #>  7 f7cecffa-00b4-4… 43224f82-db2a-443c-9… https://cellx… <list>    st9@sanger.a… #>  8 f17b9205-f61f-4… 21ff4724-95e2-491b-8… https://cellx… <list>    genevieve.ko… #>  9 64b24fda-6591-4… e414854b-2666-4977-9… https://cellx… <lgl [1]> magness@med.… #> 10 48259aa8-f168-4… 44601b80-bd11-49d8-a… https://cellx… <lgl [1]> wtk22@cam.ac… #> # ℹ 173 more rows #> # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, #> #   description <chr>, doi <chr>, links <list>, name <chr>, #> #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, #> #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date>  collections(db) |>     dplyr::glimpse() #> Rows: 183 #> Columns: 18 #> $ collection_id         <chr> \"ceb895f4-ff9f-403a-b7c3-187a9657ac2c\", \"af893e8… #> $ collection_version_id <chr> \"ee098b5a-4f33-473b-b52a-0451de1f80ae\", \"768170a… #> $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/ce… #> $ consortia             <list> [\"BRAIN Initiative\"], [\"CZI Single-Cell Biology… #> $ contact_email         <chr> \"panagiotis.roussos@mssm.edu\", \"ruichen@bcm.edu\"… #> $ contact_name          <chr> \"Panos Roussos\", \"Rui Chen\", \"Wenjun Yan\", \"Kimb… #> $ curator_name          <chr> \"Corinn Sophia Small\", \"Jennifer Yu-Sheng Chien\"… #> $ description           <chr> \"We simultaneously profiled gene expression and … #> $ doi                   <chr> \"10.1126/sciadv.adg3754\", \"10.1016/j.xgen.2023.1… #> $ links                 <list> [[\"SCP1859\", \"OTHER\", \"https://singlecell.broad… #> $ name                  <chr> \"Multi-omic profiling of the developing human ce… #> $ publisher_metadata    <list> [[[\"Zhu\", \"Kaiyi\"], [\"Bendl\", \"Jaroslav\"], [\"Ra… #> $ revising_in           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ revision_of           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ visibility            <chr> \"PUBLIC\", \"PUBLIC\", \"PUBLIC\", \"PUBLIC\", \"PUBLIC\"… #> $ created_at            <date> 2023-12-12, 2023-12-11, 2023-12-12, 2023-12-11,… #> $ published_at          <date> 2023-08-28, 2021-10-29, 2023-02-10, 2023-08-31,… #> $ revised_at            <date> 2023-12-13, 2023-12-13, 2023-12-13, 2023-12-13,…  datasets(db) |>     dplyr::glimpse() #> Rows: 1,179 #> Columns: 31 #> $ dataset_id                 <chr> \"53ce2631-3646-4172-bbd9-38b0a44d8214\", \"1d… #> $ dataset_version_id         <chr> \"2f17c183-388a-4c08-9adb-a146833e57ab\", \"94… #> $ collection_id              <chr> \"ceb895f4-ff9f-403a-b7c3-187a9657ac2c\", \"ce… #> $ donor_id                   <list> [\"LaFet1\", \"LaFet2\", \"EaFet2\", \"EaFet1\", \"… #> $ assay                      <list> [[\"10x multiome\", \"EFO:0030059\"]], [[\"10x … #> $ batch_condition            <list> [\"donor_id\", \"batch\"], [\"donor_id\", \"batch… #> $ cell_count                 <int> 45549, 45549, 18011, 11617, 53040, 56507, 7… #> $ cell_type                  <list> [[\"astrocyte\", \"CL:0000127\"], [\"caudal gan… #> $ citation                   <chr> \"Publication: https://doi.org/10.1126/sciad… #> $ development_stage          <list> [[\"14-year-old human stage\", \"HsapDv:00001… #> $ disease                    <list> [[\"normal\", \"PATO:0000461\"]], [[\"normal\", … #> $ embeddings                 <list> [\"X_joint_wnn_umap\", \"X_umap\"], [\"X_joint_… #> $ explorer_url               <chr> \"https://cellxgene.cziscience.com/e/53ce263… #> $ feature_biotype            <list> [\"gene\"], [\"gene\"], [\"gene\"], [\"gene\"], [\"… #> $ feature_count              <int> 30113, 19492, 30933, 30933, 30933, 30933, 3… #> $ feature_reference          <list> [\"NCBITaxon:9606\"], [\"NCBITaxon:9606\"], [\"… #> $ is_primary_data            <list> [TRUE], [TRUE], [FALSE], [TRUE], [FALSE], … #> $ mean_genes_per_cell        <dbl> 1886.041, 4865.284, 2028.297, 4518.387, 222… #> $ organism                   <list> [[\"Homo sapiens\", \"NCBITaxon:9606\"]], [[\"H… #> $ primary_cell_count         <int> 45549, 45549, 0, 11617, 0, 0, 0, 244474, 0,… #> $ raw_data_location          <chr> \"raw.X\", \"raw.X\", \"raw.X\", \"raw.X\", \"raw.X\"… #> $ schema_version             <chr> \"4.0.0\", \"4.0.0\", \"4.0.0\", \"4.0.0\", \"4.0.0\"… #> $ self_reported_ethnicity    <list> [[\"unknown\", \"unknown\"]], [[\"unknown\", \"un… #> $ sex                        <list> [[\"female\", \"PATO:0000383\"], [\"male\", \"PAT… #> $ suspension_type            <list> [\"nucleus\"], [\"nucleus\"], [\"nucleus\"], [\"n… #> $ tissue                     <list> [[\"cortical plate\", \"UBERON:0005343\", \"tis… #> $ title                      <chr> \"10x scRNA-seq from human cortex\", \"10x scA… #> $ tombstone                  <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F… #> $ x_approximate_distribution <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ published_at               <date> 2023-08-28, 2023-08-28, 2021-10-29, 2021-1… #> $ revised_at                 <date> 2023-12-13, 2023-12-13, 2023-12-13, 2023-1…  # \\donttest{ if (interactive()) {     ## visualize the first dataset     datasets(db) |>         dplyr::slice(1) |>         datasets_visualize() } # } files(db) |>     dplyr::glimpse() #> Rows: 2,338 #> Columns: 4 #> $ dataset_id <chr> \"53ce2631-3646-4172-bbd9-38b0a44d8214\", \"53ce2631-3646-4172… #> $ filesize   <dbl> 406108808, 399752425, 906795740, 1060800682, 1071401902, 14… #> $ filetype   <chr> \"H5AD\", \"RDS\", \"H5AD\", \"RDS\", \"H5AD\", \"RDS\", \"H5AD\", \"RDS\",… #> $ url        <chr> \"https://datasets.cellxgene.cziscience.com/2f17c183-388a-4c…  if (FALSE) { files(db) |>     dplyr::slice(1) |>     files_download(dry.run = FALSE) }  ## common links to external data links(db) |>     dplyr::count(link_type) #> # A tibble: 5 × 2 #>   link_type       n #>   <chr>       <int> #> 1 DATA_SOURCE    35 #> 2 LAB_WEBSITE    38 #> 3 OTHER         333 #> 4 PROTOCOL       44 #> 5 RAW_DATA      275  ## authors per collection authors() |>     dplyr::count(collection_id, sort = TRUE) #> # A tibble: 173 × 2 #>    collection_id                            n #>    <chr>                                <int> #>  1 e5f58829-1a66-40b5-a624-9046778e74f5   221 #>  2 8f126edf-5405-4731-8374-b5ce11f53e82   205 #>  3 bcb61471-2a44-4d00-a0af-ff085512674c   171 #>  4 4f586cb6-972b-4ef7-a4ef-3c3800a3c004   147 #>  5 0b9d8a04-bb9d-44da-aa27-705bb65b54eb   135 #>  6 367d95c0-0eb0-4dae-8276-9407239421ee   106 #>  7 6f6d381a-7701-4781-935c-db10d30de293    98 #>  8 1ca90a2d-2943-483d-b678-b809bf464c30    94 #>  9 0a839c4b-10d0-4d64-9272-684c49a2c8ba    90 #> 10 ae1420fe-6630-46ed-8b3d-cc6056a66467    83 #> # ℹ 163 more rows  publisher_metadata() |>     dplyr::glimpse() #> Rows: 173 #> Columns: 9 #> $ collection_id   <chr> \"ceb895f4-ff9f-403a-b7c3-187a9657ac2c\", \"af893e86-8e9f… #> $ name            <chr> \"Multi-omic profiling of the developing human cerebral… #> $ is_preprint     <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE… #> $ journal         <chr> \"Sci. Adv.\", \"Cell Genomics\", \"Sci Rep\", \"Nat Neurosci… #> $ published_at    <date> 2023-10-13, 2023-06-01, 2020-06-17, 2021-08-01, 2021-… #> $ published_year  <int> 2023, 2023, 2020, 2021, 2021, 2018, 2022, 2021, 2022, … #> $ published_month <int> 10, 6, 6, 8, 3, 10, 12, 7, 1, 4, 12, 6, 9, 8, 10, 2, 1… #> $ published_day   <int> 13, 1, 17, 1, 12, 1, 1, 1, 1, 21, 1, 15, 6, 1, 1, 1, 1… #> $ doi             <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…"},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-18","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.8","title":"cellxgenedp 1.8","text":"(v 1.7.2) Add vignette ‘Case studies’, include identifying dataset authors using ontolgies identify datasets (v 1.7.1) Update vignette section dataset visualization accomodate changes ‘Discover’ API. https://github.com/mtmorgan/cellxgenedp/issues/15","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-16","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.6","title":"cellxgenedp 1.6","text":"(v 1.5.2) use CELLxGENE ‘Discover’ API, changing column names return values. See ‘API changes’ ‘Discover download datasets…’ vignette.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-14","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.4","title":"cellxgenedp 1.4","text":"SIGNIFICANT USER-VISIBLE CHANGES (v 1.3.3) add publisher_metadata(), authors(), links() make access nested ‘collections()’ data straight-forward","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-12","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.2","title":"cellxgenedp 1.2","text":"SIGNIFICANT USER-VISIBLE CHANGES (v. 1.1.4) allow custom files_download() cache. Thanks @stemangiola, https://github.com/mtmorgan/cellxgenedp/pull/9 (v. 1.1.6) datasets ethnicity field renamed self_reported_ethnicity (v. 1.1.7) use zellkonverter’s basilisk-based Python parser read H5AD files vignette, see https://github.com/theislab/zellkonverter/issues/78 (v. 1.1.2) reset cache build machines weekly (v. 1.1.6) use {rjsoncons} CRAN package queries, rather local implementation. Thanks @LiNk-NY, https://github.com/mtmorgan/cellxgenedp/pull/12","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-007","dir":"Changelog","previous_headings":"","what":"cellxgenedp 0.0.7","title":"cellxgenedp 0.0.7","text":"(v. 0.0.7) make errors local cache update accessible; see https://github.com/mtmorgan/cellxgenedp/issues/1","code":""}]
