[{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"installation-and-use","dir":"Articles","previous_headings":"","what":"Installation and use","title":"Discover and download datasets and files from the cellxgene data portal","text":"package available Bioconductor version 3.15 later. following code installs cellxgenedp well packages required vignette. Use following pkgs vector install GitHub (latest, unchecked, development version) instead Load package current R session. make extensive use dplyr packages, end vignette use SingleCellExperiment zellkonverter, load well.","code":"pkgs <- c(\"cellxgenedp\", \"zellkonverter\", \"SingleCellExperiment\", \"HDF5Array\") required_pkgs <- pkgs[!pkgs %in% rownames(installed.packages())] BiocManager::install(required_pkgs) pkgs <- c(     \"mtmorgan/cellxgenedp\", \"zellkonverter\", \"SingleCellExperiment\", \"HDF5Array\" ) suppressPackageStartupMessages({     library(zellkonverter)     library(SingleCellExperiment) # load early to avoid masking dplyr::count()     library(dplyr)     library(cellxgenedp) })"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"cxg-provides-a-shiny-interface","dir":"Articles","previous_headings":"","what":"cxg() Provides a ‘shiny’ interface","title":"Discover and download datasets and files from the cellxgene data portal","text":"following sections outline use cellxgenedp package R script; functionality also available cxg() shiny application, providing easy way identify, download, visualize one several datasets. Start app choose project first tab, dataset visualization, one datasets download!","code":"cxg()"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"collections-datasets-and-files","dir":"Articles","previous_headings":"","what":"Collections, datasets and files","title":"Discover and download datasets and files from the cellxgene data portal","text":"Retrieve metadata resources available cellxgene data portal using db(): Printing db object provides brief overview available data, well hints, form functions like collections(), exploration. portal organizes data hierarchically, ‘collections’ (research studies, approximately), ‘datasets’, ‘files’. Discover data using corresponding functions. resources unique primary identifier (e.g., file_id) well identifier describing relationship resource components database (e.g., dataset_id). identifiers can used ‘join’ information across tables.","code":"db <- db() db ## cellxgene_db ## number of collections(): 167 ## number of datasets(): 1125 ## number of files(): 2231 collections(db) ## # A tibble: 167 × 18 ##    collection_id    collection_version_id collection_url consortia contact_email ##    <chr>            <chr>                 <chr>          <list>    <chr>         ##  1 1ca90a2d-2943-4… db29f59d-b9b7-4636-8… https://cellx… <list>    edl@allenins… ##  2 10ec9198-584e-4… 42fcb56f-6402-4156-b… https://cellx… <list>    chenc6@email… ##  3 1b014f39-f202-4… 9b295017-aff1-47ad-8… https://cellx… <lgl [1]> kimberly.ald… ##  4 367d95c0-0eb0-4… 4216ddce-94c0-4fdc-9… https://cellx… <list>    edl@allenins… ##  5 af893e86-8e9f-4… fc8a8009-02f0-4084-9… https://cellx… <list>    ruichen@bcm.… ##  6 48d354f5-a5ca-4… 54caf53d-0a4d-4874-9… https://cellx… <list>    Nathan.Salom… ##  7 a3ffde6c-7ad2-4… 3dd06fe9-000e-4b73-b… https://cellx… <list>    aviv.regev.s… ##  8 13d1c580-4b17-4… c7b93415-bf09-45df-9… https://cellx… <list>    my4@sanger.a… ##  9 fbc5881f-1ee3-4… 4f2da30d-407b-4c94-8… https://cellx… <list>    Douglas.Stra… ## 10 4f889ffc-d4bc-4… a6fbd6dc-4bf5-4b6a-9… https://cellx… <lgl [1]> kaistcbfg@gm… ## # ℹ 157 more rows ## # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, ## #   description <chr>, doi <chr>, links <list>, name <chr>, ## #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, ## #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date> datasets(db) ## # A tibble: 1,125 × 25 ##    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition ##    <chr>        <chr>              <chr>         <list>   <list> <list>          ##  1 fc0ceb80-d2… d9e98068-b506-434… 1ca90a2d-294… <list>   <list> <list [1]>      ##  2 f67f2cfa-ba… 3361dba5-7446-4e3… 1ca90a2d-294… <list>   <list> <list [1]>      ##  3 eec3e37d-ed… 427e3253-c230-4d7… 1ca90a2d-294… <list>   <list> <list [1]>      ##  4 e8ac3386-31… 75338c67-3e91-428… 1ca90a2d-294… <list>   <list> <list [1]>      ##  5 de104f7e-14… 19cf2bd2-44ba-40a… 1ca90a2d-294… <list>   <list> <list [1]>      ##  6 d87f3f91-dc… b8883057-f9b4-41e… 1ca90a2d-294… <list>   <list> <list [1]>      ##  7 d2fc9880-e6… b0313650-ec3e-416… 1ca90a2d-294… <list>   <list> <list [1]>      ##  8 d0ea3ec4-0f… 806eaf48-4832-42e… 1ca90a2d-294… <list>   <list> <list [1]>      ##  9 c76098ba-ee… df8e241a-6cf8-43c… 1ca90a2d-294… <list>   <list> <list [1]>      ## 10 c2876b1b-06… 60496f4c-5bcd-4ce… 1ca90a2d-294… <list>   <list> <list [1]>      ## # ℹ 1,115 more rows ## # ℹ 19 more variables: cell_count <int>, cell_type <list>, ## #   development_stage <list>, disease <list>, explorer_url <chr>, ## #   is_primary_data <list>, mean_genes_per_cell <dbl>, organism <list>, ## #   primary_cell_count <int>, schema_version <chr>, ## #   self_reported_ethnicity <list>, sex <list>, suspension_type <list>, ## #   tissue <list>, title <chr>, tombstone <lgl>, … files(db) ## # A tibble: 2,231 × 4 ##    dataset_id                             filesize filetype url                  ##    <chr>                                     <dbl> <chr>    <chr>                ##  1 fc0ceb80-d2d9-47c1-9d78-b0e45c64c500   73375840 H5AD     https://datasets.ce… ##  2 fc0ceb80-d2d9-47c1-9d78-b0e45c64c500   58660235 RDS      https://datasets.ce… ##  3 f67f2cfa-ba45-4f77-8e26-64a15f666043  234660104 H5AD     https://datasets.ce… ##  4 f67f2cfa-ba45-4f77-8e26-64a15f666043  259116909 RDS      https://datasets.ce… ##  5 eec3e37d-ed41-4881-bc6e-aaf39a2c6eb0  866819000 H5AD     https://datasets.ce… ##  6 eec3e37d-ed41-4881-bc6e-aaf39a2c6eb0  925519839 RDS      https://datasets.ce… ##  7 e8ac3386-31d4-48ba-aa70-1bae0cf020e7  529089281 H5AD     https://datasets.ce… ##  8 e8ac3386-31d4-48ba-aa70-1bae0cf020e7  580572471 RDS      https://datasets.ce… ##  9 de104f7e-14fa-4795-bd19-b5ee2c1563e0 1643894191 H5AD     https://datasets.ce… ## 10 de104f7e-14fa-4795-bd19-b5ee2c1563e0 2157485192 RDS      https://datasets.ce… ## # ℹ 2,221 more rows"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"using-dplyr-to-navigate-data","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Using dplyr to navigate data","title":"Discover and download datasets and files from the cellxgene data portal","text":"collection may several datasets, datasets may several files. instance, collection datasets can find collection joining collections() table. can take similar strategy identify datasets belonging collection","code":"collection_with_most_datasets <-     datasets(db) |>     count(collection_id, sort = TRUE) |>     slice(1) left_join(     collection_with_most_datasets |> select(collection_id),     collections(db),     by = \"collection_id\" ) |> glimpse() ## Rows: 1 ## Columns: 18 ## $ collection_id         <chr> \"283d65eb-dd53-496d-adb7-7570c7caa443\" ## $ collection_version_id <chr> \"dd99dabe-f2cc-495a-be7a-972cc2f3bb66\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/28… ## $ consortia             <list> [\"BRAIN Initiative\", \"CZI Single-Cell Biology\"] ## $ contact_email         <chr> \"kimberly.siletti@ki.se\" ## $ contact_name          <chr> \"Kimberly Siletti\" ## $ curator_name          <chr> \"James Chaffer\" ## $ description           <chr> \"First draft atlas of human brain transcriptomic… ## $ doi                   <chr> \"10.1126/science.add7046\" ## $ links                 <list> [[\"\", \"RAW_DATA\", \"http://data.nemoarchive.org/b… ## $ name                  <chr> \"Human Brain Cell Atlas v1.0\" ## $ publisher_metadata    <list> [[[\"Siletti\", \"Kimberly\"], [\"Hodge\", \"Rebecca\"]… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2023-10-23 ## $ published_at          <date> 2022-12-09 ## $ revised_at            <date> 2023-10-23 left_join(     collection_with_most_datasets |> select(collection_id),     datasets(db),     by = \"collection_id\" ) ## # A tibble: 138 × 25 ##    collection_id   dataset_id dataset_version_id donor_id assay  batch_condition ##    <chr>           <chr>      <chr>              <list>   <list> <list>          ##  1 283d65eb-dd53-… ff7d15fa-… ad4f40b1-ad1b-43e… <list>   <list> <list [1]>      ##  2 283d65eb-dd53-… fe1a73ab-… ca8e9e3a-852f-487… <list>   <list> <list [1]>      ##  3 283d65eb-dd53-… fbf173f9-… 3cd2b19b-7bda-4ad… <list>   <list> <list [1]>      ##  4 283d65eb-dd53-… fa554686-… e05b2d3e-f9cb-460… <list>   <list> <list [1]>      ##  5 283d65eb-dd53-… f9034091-… 3c1f250d-f27e-49a… <list>   <list> <list [1]>      ##  6 283d65eb-dd53-… f8dda921-… de9cd660-638d-4b3… <list>   <list> <list [1]>      ##  7 283d65eb-dd53-… f7d003d4-… e50d1b65-4ad1-48b… <list>   <list> <list [1]>      ##  8 283d65eb-dd53-… f6d9f2ad-… a46aed38-e822-490… <list>   <list> <list [1]>      ##  9 283d65eb-dd53-… f5a04dff-… 1c90c2fe-8f62-47d… <list>   <list> <list [1]>      ## 10 283d65eb-dd53-… f502c312-… 166e3950-147b-4f4… <list>   <list> <list [1]>      ## # ℹ 128 more rows ## # ℹ 19 more variables: cell_count <int>, cell_type <list>, ## #   development_stage <list>, disease <list>, explorer_url <chr>, ## #   is_primary_data <list>, mean_genes_per_cell <dbl>, organism <list>, ## #   primary_cell_count <int>, schema_version <chr>, ## #   self_reported_ethnicity <list>, sex <list>, suspension_type <list>, ## #   tissue <list>, title <chr>, tombstone <lgl>, …"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"facets-provides-information-on-levels-present-in-specific-columns","dir":"Articles","previous_headings":"Collections, datasets and files","what":"facets() provides information on ‘levels’ present in specific columns","title":"Discover and download datasets and files from the cellxgene data portal","text":"Notice columns ‘lists’ rather atomic vectors like ‘character’ ‘integer’. indicates least datasets one type assay, cell_type, etc. facets() function provides convenient way discovering possible levels column, e.g., assay, organism, self_reported_ethnicity, sex, number datasets label.","code":"datasets(db) |>     select(where(is.list)) ## # A tibble: 1,125 × 12 ##    donor_id    assay      batch_condition cell_type   development_stage disease ##    <list>      <list>     <list>          <list>      <list>            <list>  ##  1 <list [79]> <list [2]> <list [1]>      <list [1]>  <list [21]>       <list>  ##  2 <list [89]> <list [2]> <list [1]>      <list [1]>  <list [24]>       <list>  ##  3 <list [89]> <list [2]> <list [1]>      <list [1]>  <list [24]>       <list>  ##  4 <list [88]> <list [2]> <list [1]>      <list [1]>  <list [24]>       <list>  ##  5 <list [89]> <list [2]> <list [1]>      <list [1]>  <list [24]>       <list>  ##  6 <list [89]> <list [2]> <list [1]>      <list [1]>  <list [24]>       <list>  ##  7 <list [89]> <list [2]> <list [1]>      <list [1]>  <list [24]>       <list>  ##  8 <list [83]> <list [2]> <list [1]>      <list [1]>  <list [21]>       <list>  ##  9 <list [89]> <list [2]> <list [1]>      <list [1]>  <list [24]>       <list>  ## 10 <list [89]> <list [2]> <list [1]>      <list [18]> <list [24]>       <list>  ## # ℹ 1,115 more rows ## # ℹ 6 more variables: is_primary_data <list>, organism <list>, ## #   self_reported_ethnicity <list>, sex <list>, suspension_type <list>, ## #   tissue <list> facets(db, \"assay\") ## # A tibble: 36 × 4 ##    facet label                          ontology_term_id     n ##    <chr> <chr>                          <chr>            <int> ##  1 assay 10x 3' v3                      EFO:0009922        534 ##  2 assay 10x 3' v2                      EFO:0009899        235 ##  3 assay Slide-seqV2                    EFO:0030062        223 ##  4 assay Visium Spatial Gene Expression EFO:0010961        107 ##  5 assay 10x 5' v1                      EFO:0011025         69 ##  6 assay Smart-seq2                     EFO:0008931         63 ##  7 assay 10x multiome                   EFO:0030059         60 ##  8 assay 10x 5' v2                      EFO:0009900         18 ##  9 assay sci-RNA-seq3                   EFO:0030028         15 ## 10 assay 10x 5' transcription profiling EFO:0030004         13 ## # ℹ 26 more rows facets(db, \"self_reported_ethnicity\") ## # A tibble: 32 × 4 ##    facet                   label                          ontology_term_id     n ##    <chr>                   <chr>                          <chr>            <int> ##  1 self_reported_ethnicity European                       HANCESTRO:0005     483 ##  2 self_reported_ethnicity unknown                        unknown            376 ##  3 self_reported_ethnicity na                             na                 308 ##  4 self_reported_ethnicity Asian                          HANCESTRO:0008     132 ##  5 self_reported_ethnicity African American               HANCESTRO:0568      59 ##  6 self_reported_ethnicity Hispanic or Latin American     HANCESTRO:0014      42 ##  7 self_reported_ethnicity admixed ancestry               HANCESTRO:0306      28 ##  8 self_reported_ethnicity African American or Afro-Cari… HANCESTRO:0016      26 ##  9 self_reported_ethnicity multiethnic                    multiethnic         25 ## 10 self_reported_ethnicity Greater Middle Eastern  (Midd… HANCESTRO:0015      22 ## # ℹ 22 more rows facets(db, \"sex\") ## # A tibble: 3 × 4 ##   facet label   ontology_term_id     n ##   <chr> <chr>   <chr>            <int> ## 1 sex   male    PATO:0000384       874 ## 2 sex   female  PATO:0000383       645 ## 3 sex   unknown unknown            156"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"filtering-faceted-columns","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Filtering faceted columns","title":"Discover and download datasets and files from the cellxgene data portal","text":"Suppose interested finding datasets 10x 3’ v3 assay (ontology_term_id EFO:0009922) containing individuals African American ethnicity, female sex. Use facets_filter() utility function filter data sets needed Use nrow(african_american_female) find number datasets satisfying criteria. looks like cells sequenced (dataset may contain cells several ethnicities, well males individuals unknown gender, know actual number cells available without downloading files). Use left_join identify corresponding collections:","code":"african_american_female <-     datasets(db) |>     filter(         facets_filter(assay, \"ontology_term_id\", \"EFO:0009922\"),         facets_filter(self_reported_ethnicity, \"label\", \"African American\"),         facets_filter(sex, \"label\", \"female\")     ) african_american_female |>     summarise(total_cell_count = sum(cell_count)) ## # A tibble: 1 × 1 ##   total_cell_count ##              <int> ## 1          3529061 ## collections left_join(     african_american_female |> select(collection_id) |> distinct(),     collections(db),     by = \"collection_id\" ) ## # A tibble: 11 × 18 ##    collection_id    collection_version_id collection_url consortia contact_email ##    <chr>            <chr>                 <chr>          <list>    <chr>         ##  1 4195ab4c-20bd-4… 62466cd5-fca8-4961-b… https://cellx… <list>    nnavin@mdand… ##  2 b9fc3d70-5a72-4… b659b6b3-7663-41f8-8… https://cellx… <list>    bruce.aronow… ##  3 625f6bf4-2f33-4… 8d39b458-ddda-4352-a… https://cellx… <list>    a5wang@healt… ##  4 a98b828a-622a-4… 2be54f40-4035-4c92-b… https://cellx… <list>    markusbi@med… ##  5 f17b9205-f61f-4… 15a28896-455f-44ee-a… https://cellx… <list>    genevieve.ko… ##  6 71f4bccf-53d4-4… 53787064-a595-488c-8… https://cellx… <list>    kevinmbyrd@g… ##  7 6b701826-37bb-4… fc5d2347-b859-4744-a… https://cellx… <list>    astreets@ber… ##  8 b953c942-f5d8-4… d221209d-610d-47f0-b… https://cellx… <lgl [1]> icobos@stanf… ##  9 62e8f058-9c37-4… bbef37d2-df22-4e20-b… https://cellx… <list>    chanj3@mskcc… ## 10 c9706a92-0e5f-4… 184e8999-210d-47e5-a… https://cellx… <list>    hnakshat@iup… ## 11 bcb61471-2a44-4… e58adfce-580f-4280-8… https://cellx… <list>    info@kpmp.org ## # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, ## #   description <chr>, doi <chr>, links <list>, name <chr>, ## #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, ## #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date>"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"publication-and-other-external-data","dir":"Articles","previous_headings":"Collections, datasets and files","what":"Publication and other external data","title":"Discover and download datasets and files from the cellxgene data portal","text":"Many collections include publication information external data. information available return value collections(), helper function publisher_metadata(), authors(), links() may facilite access. Suppose one interested publication “single-cell atlas healthy breast tissues reveals clinically relevant clusters breast epithelial cells”. Discover collections Use collection_id extract publisher metadata (including DOI available) author information Collections may links additional external data, case DOI two links RAW_DATA. Conversely, knowledge DOI, etc., can used discover details corresponding collection.","code":"title_of_interest <- paste(     \"A single-cell atlas of the healthy breast tissues reveals clinically\",     \"relevant clusters of breast epithelial cells\" ) collection_of_interest <-     collections(db) |>     dplyr::filter(startsWith(name, title_of_interest)) collection_of_interest |>     glimpse() ## Rows: 1 ## Columns: 18 ## $ collection_id         <chr> \"c9706a92-0e5f-46c1-96d8-20e42467f287\" ## $ collection_version_id <chr> \"184e8999-210d-47e5-aaa8-56224a925a11\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/c9… ## $ consortia             <list> [\"CZI Single-Cell Biology\"] ## $ contact_email         <chr> \"hnakshat@iupui.edu\" ## $ contact_name          <chr> \"Harikrishna Nakshatri\" ## $ curator_name          <chr> \"Jennifer Yu-Sheng Chien\" ## $ description           <chr> \"Single-cell RNA sequencing (scRNA-seq) is an ev… ## $ doi                   <chr> \"10.1016/j.xcrm.2021.100219\" ## $ links                 <list> [[\"\", \"RAW_DATA\", \"https://data.humancellatlas.o… ## $ name                  <chr> \"A single-cell atlas of the healthy breast tiss… ## $ publisher_metadata    <list> [[[\"Bhat-Nakshatri\", \"Poornima\"], [\"Gao\", \"Hongy… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2023-08-22 ## $ published_at          <date> 2021-03-25 ## $ revised_at            <date> 2023-08-22 collection_id_of_interest <- pull(collection_of_interest, \"collection_id\") publisher_metadata(db) |>     filter(collection_id == collection_id_of_interest) |>     glimpse() ## Rows: 1 ## Columns: 9 ## $ collection_id   <chr> \"c9706a92-0e5f-46c1-96d8-20e42467f287\" ## $ name            <chr> \"A single-cell atlas of the healthy breast tissues rev… ## $ is_preprint     <lgl> FALSE ## $ journal         <chr> \"Cell Reports Medicine\" ## $ published_at    <date> 2021-03-01 ## $ published_year  <int> 2021 ## $ published_month <int> 3 ## $ published_day   <int> 1 ## $ doi             <chr> NA authors(db) |>     filter(collection_id == collection_id_of_interest) ## # A tibble: 12 × 4 ##    collection_id                        family         given       consortium ##    <chr>                                <chr>          <chr>       <chr>      ##  1 c9706a92-0e5f-46c1-96d8-20e42467f287 Bhat-Nakshatri Poornima    NA         ##  2 c9706a92-0e5f-46c1-96d8-20e42467f287 Gao            Hongyu      NA         ##  3 c9706a92-0e5f-46c1-96d8-20e42467f287 Sheng          Liu         NA         ##  4 c9706a92-0e5f-46c1-96d8-20e42467f287 McGuire        Patrick C.  NA         ##  5 c9706a92-0e5f-46c1-96d8-20e42467f287 Xuei           Xiaoling    NA         ##  6 c9706a92-0e5f-46c1-96d8-20e42467f287 Wan            Jun         NA         ##  7 c9706a92-0e5f-46c1-96d8-20e42467f287 Liu            Yunlong     NA         ##  8 c9706a92-0e5f-46c1-96d8-20e42467f287 Althouse       Sandra K.   NA         ##  9 c9706a92-0e5f-46c1-96d8-20e42467f287 Colter         Austyn      NA         ## 10 c9706a92-0e5f-46c1-96d8-20e42467f287 Sandusky       George      NA         ## 11 c9706a92-0e5f-46c1-96d8-20e42467f287 Storniolo      Anna Maria  NA         ## 12 c9706a92-0e5f-46c1-96d8-20e42467f287 Nakshatri      Harikrishna NA external_links <- links(db) external_links ## # A tibble: 685 × 4 ##    collection_id                        link_name             link_type link_url ##    <chr>                                <chr>                 <chr>     <chr>    ##  1 1ca90a2d-2943-483d-b678-b809bf464c30 UW Alzheimer's Disea… OTHER     http://… ##  2 1ca90a2d-2943-483d-b678-b809bf464c30 Adult Changes in Tho… OTHER     https:/… ##  3 1ca90a2d-2943-483d-b678-b809bf464c30 UW BioRepository and… OTHER     https:/… ##  4 1ca90a2d-2943-483d-b678-b809bf464c30 SEA-AD Homepage       OTHER     https:/… ##  5 1ca90a2d-2943-483d-b678-b809bf464c30 AD Knowledge Portal   RAW_DATA  https:/… ##  6 1ca90a2d-2943-483d-b678-b809bf464c30 DOWNLOAD OFFICIAL DA… OTHER     https:/… ##  7 10ec9198-584e-4a7e-8a24-4a332915a4ef NA                    OTHER     https:/… ##  8 10ec9198-584e-4a7e-8a24-4a332915a4ef NA                    OTHER     https:/… ##  9 10ec9198-584e-4a7e-8a24-4a332915a4ef phs002371             RAW_DATA  https:/… ## 10 1b014f39-f202-45ae-bb7d-9286bddd8d8b Sequence data (phs00… RAW_DATA  https:/… ## # ℹ 675 more rows external_links |>     count(link_type) ## # A tibble: 5 × 2 ##   link_type       n ##   <chr>       <int> ## 1 DATA_SOURCE    33 ## 2 LAB_WEBSITE    36 ## 3 OTHER         315 ## 4 PROTOCOL       42 ## 5 RAW_DATA      259 external_links |>     filter(collection_id == collection_id_of_interest) ## # A tibble: 2 × 4 ##   collection_id                        link_name link_type link_url              ##   <chr>                                <chr>     <chr>     <chr>                 ## 1 c9706a92-0e5f-46c1-96d8-20e42467f287 NA        RAW_DATA  https://data.humance… ## 2 c9706a92-0e5f-46c1-96d8-20e42467f287 NA        RAW_DATA  https://www.ncbi.nlm… doi_of_interest <- \"https://doi.org/10.1016/j.stem.2018.12.011\" links(db) |>     filter(link_url == doi_of_interest) |>     left_join(collections(db), by = \"collection_id\") |>     glimpse() ## Rows: 1 ## Columns: 21 ## $ collection_id         <chr> \"b1a879f6-5638-48d3-8f64-f6592c1b1561\" ## $ link_name             <chr> \"PSC-ATO protocol\" ## $ link_type             <chr> \"PROTOCOL\" ## $ link_url              <chr> \"https://doi.org/10.1016/j.stem.2018.12.011\" ## $ collection_version_id <chr> \"9f39813e-f8ee-4bb3-ba3b-5b3711875fb7\" ## $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/b1… ## $ consortia             <list> [\"CZI Single-Cell Biology\", \"Wellcome HCA Strate… ## $ contact_email         <chr> \"st9@sanger.ac.uk\" ## $ contact_name          <chr> \"Sarah Teichmann\" ## $ curator_name          <chr> \"Batuhan Cakir\" ## $ description           <chr> \"Single-cell genomics studies have decoded the i… ## $ doi                   <chr> \"10.1126/science.abo0510\" ## $ links                 <list> [[\"scVI Models\", \"DATA_SOURCE\", \"https://develop… ## $ name                  <chr> \"Mapping the developing human immune system acro… ## $ publisher_metadata    <list> [[[\"Suo\", \"Chenqu\"], [\"Dann\", \"Emma\"], [\"Goh\", \"… ## $ revising_in           <lgl> NA ## $ revision_of           <lgl> NA ## $ visibility            <chr> \"PUBLIC\" ## $ created_at            <date> 2023-08-31 ## $ published_at          <date> 2022-10-04 ## $ revised_at            <date> 2023-08-24"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"visualizing-data-in-cellxgene","dir":"Articles","previous_headings":"","what":"Visualizing data in cellxgene","title":"Discover and download datasets and files from the cellxgene data portal","text":"Visualization straight-forward dataset_id available. example, visualize first dataset african_american_female, use Visualization interactive process, datasets_visualize() open 5 browser tabs per call.","code":"african_american_female |>     ## use criteria to identify a single dataset (here just the     ## 'first' dataset), then visualize     slice(1) |>     datasets_visualize()"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"file-download-and-use","dir":"Articles","previous_headings":"","what":"File download and use","title":"Discover and download datasets and files from the cellxgene data portal","text":"Datasets usually contain H5AD (files produced python AnnData module), Rds (serialized files produced R Seurat package). Rds files may unreadable version Seurat used create file different version used read file. therefore focus H5AD files. illustration, find files associated studies African American females download one selected files. choose single dataset H5AD file download downloaded local cache (use internal function cellxgenedp:::.cellxgenedb_cache_path() location cache), process time-consuming first time. H5AD files can converted R / Bioconductor objects using zellkonverter package. SingleCellExperiment object matrix-like object rows corresponding genes columns cells. Thus can easily explore cells present data.","code":"selected_files <-     left_join(         african_american_female |> select(dataset_id),         files(db),         by = \"dataset_id\"     ) local_file <-     selected_files |>     filter(         dataset_id == \"de985818-285f-4f59-9dbd-d74968fddba3\",         filetype == \"H5AD\"     ) |>     files_download(dry.run = FALSE) basename(local_file) ## [1] \"64942e4e-3f6e-4ca0-8226-62e8491b5786.h5ad\" h5ad <- readH5AD(local_file, use_hdf5 = TRUE, reader = \"R\") ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's.  ## Warning in H5Aread(A, ...): Reading attribute data of type 'ENUM' not yet ## implemented. Values replaced by NA's. h5ad ## class: SingleCellExperiment  ## dim: 33234 31696  ## metadata(3): default_embedding schema_version title ## assays(1): X ## rownames(33234): ENSG00000243485 ENSG00000237613 ... ENSG00000277475 ##   ENSG00000268674 ## rowData names(4): feature_is_filtered feature_name feature_reference ##   feature_biotype ## colnames(31696): CMGpool_AAACCCAAGGACAACC CMGpool_AAACCCACAATCTCTT ... ##   K109064_TTTGTTGGTTGCATCA K109064_TTTGTTGGTTGGACCC ## colData names(34): donor_id self_reported_ethnicity_ontology_term_id ##   ... self_reported_ethnicity development_stage ## reducedDimNames(3): X_pca X_tsne X_umap ## mainExpName: NULL ## altExpNames(0): h5ad |>     colData(h5ad) |>     as_tibble() |>     count(sex, donor_id) ## # A tibble: 7 × 3 ##   sex    donor_id                     n ##   <fct>  <fct>                    <int> ## 1 female D1                        2303 ## 2 female D2                         864 ## 3 female D3                        2517 ## 4 female D4                        1771 ## 5 female D5                        2244 ## 6 female D11                       7454 ## 7 female pooled [D9,D7,D8,D10,D6] 14543"},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"Discover and download datasets and files from the cellxgene data portal","text":"Orchestrating Single-Cell Analysis Bioconductor online resource provides excellent introduction analysis visualization single-cell data R / Bioconductor. Extensive opportunities working AnnData objects R using native python interface briefly described , e.g., ?AnnData2SCE help page zellkonverter. hca package provides programmatic access Human Cell Atlas data portal, allowing retrieval primary well derived single-cell data files.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"api-changes","dir":"Articles","previous_headings":"","what":"API changes","title":"Discover and download datasets and files from the cellxgene data portal","text":"Data access provided CELLxGENE changed new ‘Discover’ API. main functionality cellxgenedp package changed, specific columns removed, replaced added, follows: collections() Removed: access_type, data_submission_policy_version Replaced: updated_at replaced revised_at Added: collection_version_id, collection_url, doi, revising_in, revision_of datasets() Removed: is_valid, processing_status, published, revision, created_at Replaced: dataset_deployments replaced explorer_url, name replaced title, updated_at replaced revised_at Added: dataset_version_id, batch_condition, x_approximate_distribution files() Removed: file_id, filename, s3_uri, user_submitted, created_at, updated_at Added: filesize, url","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/articles/using_cellxgenedp.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Discover and download datasets and files from the cellxgene data portal","text":"","code":"## R version 4.3.1 (2023-06-16) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] cellxgenedp_1.7.1           dplyr_1.1.3                 ##  [3] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2 ##  [5] Biobase_2.60.0              GenomicRanges_1.52.1        ##  [7] GenomeInfoDb_1.36.4         IRanges_2.34.1              ##  [9] S4Vectors_0.38.2            BiocGenerics_0.46.0         ## [11] MatrixGenerics_1.12.3       matrixStats_1.0.0           ## [13] zellkonverter_1.10.1        BiocStyle_2.28.1            ##  ## loaded via a namespace (and not attached): ##  [1] tidyselect_1.2.0        filelock_1.0.2          bitops_1.0-7            ##  [4] fastmap_1.1.1           RCurl_1.98-1.12         promises_1.2.1          ##  [7] digest_0.6.33           mime_0.12               lifecycle_1.0.3         ## [10] ellipsis_0.3.2          magrittr_2.0.3          compiler_4.3.1          ## [13] rlang_1.1.1             sass_0.4.7              tools_4.3.1             ## [16] utf8_1.2.4              yaml_2.3.7              knitr_1.44              ## [19] S4Arrays_1.0.6          htmlwidgets_1.6.2       curl_5.1.0              ## [22] reticulate_1.34.0       DelayedArray_0.26.7     abind_1.4-5             ## [25] HDF5Array_1.28.1        withr_2.5.1             purrr_1.0.2             ## [28] desc_1.4.2              grid_4.3.1              fansi_1.0.5             ## [31] xtable_1.8-4            Rhdf5lib_1.22.1         cli_3.6.1               ## [34] rmarkdown_2.25          crayon_1.5.2            ragg_1.2.6              ## [37] generics_0.1.3          httr_1.4.7              rhdf5_2.44.0            ## [40] cachem_1.0.8            stringr_1.5.0           zlibbioc_1.46.0         ## [43] parallel_4.3.1          BiocManager_1.30.22     XVector_0.40.0          ## [46] basilisk_1.12.1         vctrs_0.6.4             Matrix_1.5-4.1          ## [49] jsonlite_1.8.7          dir.expiry_1.8.0        bookdown_0.36           ## [52] systemfonts_1.0.5       jquerylib_0.1.4         glue_1.6.2              ## [55] pkgdown_2.0.7           DT_0.30                 stringi_1.7.12          ## [58] later_1.3.1             tibble_3.2.1            pillar_1.9.0            ## [61] rhdf5filters_1.12.1     basilisk.utils_1.12.1   htmltools_0.5.6.1       ## [64] GenomeInfoDbData_1.2.10 R6_2.5.1                textshaping_0.3.7       ## [67] rprojroot_2.0.3         evaluate_0.22           shiny_1.7.5.1           ## [70] lattice_0.21-8          png_0.1-8               memoise_2.0.1           ## [73] httpuv_1.6.12           bslib_0.5.1             rjsoncons_1.0.0         ## [76] Rcpp_1.0.11             xfun_0.40               fs_1.6.3                ## [79] pkgconfig_2.0.3"},{"path":"https://mtmorgan.github.io/cellxgenedp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer. Kayla Interdonato. Author.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M, Interdonato K (2023). cellxgenedp: Discover Access Single Cell Data Sets cellxgene Data Portal. https://mtmorgan.github.io/cellxgenedp/, https://github.com/mtmorgan/cellxgenedp.","code":"@Manual{,   title = {cellxgenedp: Discover and Access Single Cell Data Sets in the cellxgene Data Portal},   author = {Martin Morgan and Kayla Interdonato},   year = {2023},   note = {https://mtmorgan.github.io/cellxgenedp/, https://github.com/mtmorgan/cellxgenedp}, }"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"introduction-to-cellxgenedp","dir":"","previous_headings":"","what":"Discover and Access Single Cell Data Sets in the cellxgene Data Portal","title":"Discover and Access Single Cell Data Sets in the cellxgene Data Portal","text":"cellxgene data portal https://cellxgene.cziscience.com/ provides graphical user interface collections single-cell sequence data processed standard ways ‘count matrix’ summaries. cellxgenedp package provides alternative, R-based inteface, allowind data discovery, viewing, downloading.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Discover and Access Single Cell Data Sets in the cellxgene Data Portal","text":"package available Bioconductor version 3.15 later. following code installs cellxgenedp well packages required vignette. Use following pkgs vector install GitHub (latest, unchecked, development version) instead","code":"pkgs <- c(\"cellxgenedp\", \"zellkonverter\", \"SingleCellExperiment\", \"HDF5Array\") required_pkgs <- pkgs[!pkgs %in% rownames(installed.packages())] BiocManager::install(required_pkgs) pkgs <- c(     \"mtmorgan/cellxgenedp\", \"zellkonverter\", \"SingleCellExperiment\", \"HDF5Array\" )"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Discover and Access Single Cell Data Sets in the cellxgene Data Portal","text":"Load package current R session. make extensive use dplyr packages, end vignette use SingleCellExperiment zellkonverter, load well.","code":"suppressPackageStartupMessages({     library(dplyr)     library(cellxgenedp) })"},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"shiny","dir":"","previous_headings":"","what":"Shiny","title":"Discover and Access Single Cell Data Sets in the cellxgene Data Portal","text":"cxg() provides ‘shiny’ interface allowing discovery collections datasets, visualization selected datasets cellxgene data portal, download datasets use R.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/index.html","id":"next-steps","dir":"","previous_headings":"","what":"Next steps","title":"Discover and Access Single Cell Data Sets in the cellxgene Data Portal","text":"View artcle Discover download datasets files cellxgene data portal.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"Shiny application discovering, viewing, downloading cellxgene data","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"","code":"cxg(as = c(\"tibble\", \"sce\"))"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"character(1) Return value quiting shiny application. \"tibble\" returns tibble describing selected datasets (including location disk downloaded file). \"sce\" returns list dataset files imported R SingleCellExperiment objects.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"cxg() returns either tibble describing datasets selected shiny application, list datasets imported R SingleCellExperiment objects.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/cxg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny application for discovering, viewing, and downloading\ncellxgene data — cxg","text":"","code":"# \\donttest{ if (interactive())     cxg() # }"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve updated cellxgene database metadata — db","title":"Retrieve updated cellxgene database metadata — db","text":"Retrieve updated cellxgene database metadata","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve updated cellxgene database metadata — db","text":"","code":"db(overwrite = .db_online() && .db_first())"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve updated cellxgene database metadata — db","text":"overwrite logical(1) indicating whether database collections updated internet (default, internet available , interactive session, user requests update), read disk (assuming previous successful access internet).  overwrite = FALSE might useful reproducibility, testing, working environment restricted internet access.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve updated cellxgene database metadata — db","text":"db() returns object class 'cellxgene_db', summarizing available collections, datasets, files.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve updated cellxgene database metadata — db","text":"database retrieved cellxgene data portal web site. 'collections' metadata retrieved call; metadata collection cached locally re-use.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve updated cellxgene database metadata — db","text":"","code":"db() #> cellxgene_db #> number of collections(): 167 #> number of datasets(): 1125 #> number of files(): 2231"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":null,"dir":"Reference","previous_headings":"","what":"Facets available for querying cellxgene data — FACETS","title":"Facets available for querying cellxgene data — FACETS","text":"FACETS character vector common fields used subset cellxgene data. facets() used query cellxgene database current values one facets. facets_filter() provides convenient way filter facets based label ontology term.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facets available for querying cellxgene data — FACETS","text":"","code":"FACETS  facets(cellxgene_db = db(), facets = FACETS)  facets_filter(facet, key = c(\"label\", \"ontology_term_id\"), value, exact = TRUE)"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Facets available for querying cellxgene data — FACETS","text":"FACETS object class character length 8.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facets available for querying cellxgene data — FACETS","text":"cellxgene_db (optional) cellxgene_db object, returned db(). facets character() vector corersponding one facets FACETS. facet column containing faceted information, e.g., sex datasets(db). key character(1) identifying whether value label ontology_term_id. value character() value label ontology term filter . value may vector length(value) > 0 exact matchs (exact = TRUE, default), character(1) regular expression. exact logical(1) whether values match exactly (default, TRUE) regular expression (FALSE).","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facets available for querying cellxgene data — FACETS","text":"facets() returns tibble columns facet, label, ontology_term_id, n, number times facet label used database. facets_filter() returns logical vector length equal length (number rows) facet, TRUE indicating value key present dataset.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/facets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facets available for querying cellxgene data — FACETS","text":"","code":"f <- facets()  ## levels of each facet f |>     dplyr::count(facet) #> # A tibble: 8 × 2 #>   facet                       n #>   <chr>                   <int> #> 1 assay                      36 #> 2 cell_type                 738 #> 3 development_stage         229 #> 4 disease                    91 #> 5 organism                    7 #> 6 self_reported_ethnicity    32 #> 7 sex                         3 #> 8 tissue                    373  ## same as facets(, facets = \"organism\") f |>     dplyr::filter(facet == \"organism\") #> # A tibble: 7 × 4 #>   facet    label                 ontology_term_id     n #>   <chr>    <chr>                 <chr>            <int> #> 1 organism Homo sapiens          NCBITaxon:9606     823 #> 2 organism Mus musculus          NCBITaxon:10090    265 #> 3 organism Callithrix jacchus    NCBITaxon:9483      27 #> 4 organism Macaca mulatta        NCBITaxon:9544      18 #> 5 organism Sus scrofa domesticus NCBITaxon:9825       3 #> 6 organism Gorilla gorilla       NCBITaxon:9593       1 #> 7 organism Pan troglodytes       NCBITaxon:9598       1  db <- db() ds <- datasets(db)  ## datasets with African American females ds |>     dplyr::filter(         facets_filter(self_reported_ethnicity, \"label\", \"African American\"),         facets_filter(sex, \"label\", \"female\")     ) #> # A tibble: 50 × 25 #>    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition #>    <chr>        <chr>              <chr>         <list>   <list> <list>          #>  1 66d15835-5d… 3b2b24ca-523e-438… a238e9fa-2bd… <list>   <list> <lgl [1]>       #>  2 e47c65a8-7d… 27b49e7c-0d90-42c… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  3 c8d40d53-38… 48450fdc-ff62-498… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  4 c45f05b3-aa… d71044a8-2326-4ec… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  5 a6388a6f-60… 3cc5cb70-7442-4f5… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  6 a41202e6-17… 38b93dd0-5edd-47a… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  7 87183784-5b… ad925422-3011-470… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  8 842c6f5d-4a… 29cf079b-e74c-415… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  9 7f08cbcc-57… cd74e95e-6583-487… 4195ab4c-20b… <list>   <list> <lgl [1]>       #> 10 74520626-b0… 4e74cb9d-f8f5-43a… 4195ab4c-20b… <list>   <list> <lgl [1]>       #> # ℹ 40 more rows #> # ℹ 19 more variables: cell_count <int>, cell_type <list>, #> #   development_stage <list>, disease <list>, explorer_url <chr>, #> #   is_primary_data <list>, mean_genes_per_cell <dbl>, organism <list>, #> #   primary_cell_count <int>, schema_version <chr>, #> #   self_reported_ethnicity <list>, sex <list>, suspension_type <list>, #> #   tissue <list>, title <chr>, tombstone <lgl>, …  ## datasets with non-European, known ethnicity facets(db, \"self_reported_ethnicity\") #> # A tibble: 32 × 4 #>    facet                   label                          ontology_term_id     n #>    <chr>                   <chr>                          <chr>            <int> #>  1 self_reported_ethnicity European                       HANCESTRO:0005     483 #>  2 self_reported_ethnicity unknown                        unknown            376 #>  3 self_reported_ethnicity na                             na                 308 #>  4 self_reported_ethnicity Asian                          HANCESTRO:0008     132 #>  5 self_reported_ethnicity African American               HANCESTRO:0568      59 #>  6 self_reported_ethnicity Hispanic or Latin American     HANCESTRO:0014      42 #>  7 self_reported_ethnicity admixed ancestry               HANCESTRO:0306      28 #>  8 self_reported_ethnicity African American or Afro-Cari… HANCESTRO:0016      26 #>  9 self_reported_ethnicity multiethnic                    multiethnic         25 #> 10 self_reported_ethnicity Greater Middle Eastern  (Midd… HANCESTRO:0015      22 #> # ℹ 22 more rows ds |>     dplyr::filter(         !facets_filter(             self_reported_ethnicity, \"label\", c(\"European\", \"na\", \"unknown\")         )     ) #> # A tibble: 25 × 25 #>    dataset_id   dataset_version_id collection_id donor_id assay  batch_condition #>    <chr>        <chr>              <chr>         <list>   <list> <list>          #>  1 c45f05b3-aa… d71044a8-2326-4ec… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  2 87183784-5b… ad925422-3011-470… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  3 6e96d93c-de… 37e6e34e-ef55-4d8… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  4 31b49393-44… d6f77d6a-6a1e-4bf… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  5 2d3e3c41-34… 93c62ade-711e-49a… 4195ab4c-20b… <list>   <list> <lgl [1]>       #>  6 cfa3c355-ee… 18f9edfa-8311-4d5… 9c8808ce-113… <list>   <list> <lgl [1]>       #>  7 6ebb6e9b-ef… c546a784-39d1-43c… 8e880741-bf9… <list>   <list> <lgl [1]>       #>  8 53ea4f06-03… 4bb26a38-0787-4aa… 8e880741-bf9… <list>   <list> <lgl [1]>       #>  9 43600c3c-6a… c7819654-d26f-4cb… 8e880741-bf9… <list>   <list> <lgl [1]>       #> 10 28ab6eb8-df… b0096575-4bbc-48a… 8e880741-bf9… <list>   <list> <lgl [1]>       #> # ℹ 15 more rows #> # ℹ 19 more variables: cell_count <int>, cell_type <list>, #> #   development_stage <list>, disease <list>, explorer_url <chr>, #> #   is_primary_data <list>, mean_genes_per_cell <dbl>, organism <list>, #> #   primary_cell_count <int>, schema_version <chr>, #> #   self_reported_ethnicity <list>, sex <list>, suspension_type <list>, #> #   tissue <list>, title <chr>, tombstone <lgl>, …"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query cellxgene collections, datasets, and files — collections","title":"Query cellxgene collections, datasets, and files — collections","text":"files_download() retrieves one cellxgene files cache local system. links(), authors() publisher_metadata() helper functions extract 'nested' information collections.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query cellxgene collections, datasets, and files — collections","text":"","code":"collections(cellxgene_db = db())  datasets(cellxgene_db = db())  datasets_visualize(tbl)  files(cellxgene_db = db())  files_download(tbl, dry.run = TRUE, cache.path = .cellxgene_cache_path())  links(cellxgene_db = db())  authors(cellxgene_db = db())  publisher_metadata(cellxgene_db = db())"},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query cellxgene collections, datasets, and files — collections","text":"cellxgene_db optional 'cellxgene_db' object, returned db(). tbl tibble() typically derived datasets(db) files(db) containing columns dataset_id (datasets_visualize()), columns dataset_id, file_id, filetype (files_download()). dry.run logical(1) indicating whether (often large) file(s) tbl downloaded local cache. Files downloaded dry.run = TRUE (default). cache.path character(1) directory cache downloaded files. directory must already exist. default tools::R_user_dir(\"cellxgenedp\", \"cache\"), package-specific path user home directory.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query cellxgene collections, datasets, and files — collections","text":"function returns tibble describing corresponding component database. files_download() returns character() vector paths local files. links() returns tibble external links associated collection. Common links includ DOI, raw data / data sources, lab websites. authors() returns tibble authors associated collection. publisher_metadata() returns tibble publisher metadata (journal, publicate date, doi) associated collection.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/reference/query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query cellxgene collections, datasets, and files — collections","text":"","code":"db <- db()  collections(db) #> # A tibble: 167 × 18 #>    collection_id    collection_version_id collection_url consortia contact_email #>    <chr>            <chr>                 <chr>          <list>    <chr>         #>  1 1ca90a2d-2943-4… db29f59d-b9b7-4636-8… https://cellx… <list>    edl@allenins… #>  2 10ec9198-584e-4… 42fcb56f-6402-4156-b… https://cellx… <list>    chenc6@email… #>  3 1b014f39-f202-4… 9b295017-aff1-47ad-8… https://cellx… <lgl [1]> kimberly.ald… #>  4 367d95c0-0eb0-4… 4216ddce-94c0-4fdc-9… https://cellx… <list>    edl@allenins… #>  5 af893e86-8e9f-4… fc8a8009-02f0-4084-9… https://cellx… <list>    ruichen@bcm.… #>  6 48d354f5-a5ca-4… 54caf53d-0a4d-4874-9… https://cellx… <list>    Nathan.Salom… #>  7 a3ffde6c-7ad2-4… 3dd06fe9-000e-4b73-b… https://cellx… <list>    aviv.regev.s… #>  8 13d1c580-4b17-4… c7b93415-bf09-45df-9… https://cellx… <list>    my4@sanger.a… #>  9 fbc5881f-1ee3-4… 4f2da30d-407b-4c94-8… https://cellx… <list>    Douglas.Stra… #> 10 4f889ffc-d4bc-4… a6fbd6dc-4bf5-4b6a-9… https://cellx… <lgl [1]> kaistcbfg@gm… #> # ℹ 157 more rows #> # ℹ 13 more variables: contact_name <chr>, curator_name <chr>, #> #   description <chr>, doi <chr>, links <list>, name <chr>, #> #   publisher_metadata <list>, revising_in <lgl>, revision_of <lgl>, #> #   visibility <chr>, created_at <date>, published_at <date>, revised_at <date>  collections(db) |>     dplyr::glimpse() #> Rows: 167 #> Columns: 18 #> $ collection_id         <chr> \"1ca90a2d-2943-483d-b678-b809bf464c30\", \"10ec919… #> $ collection_version_id <chr> \"db29f59d-b9b7-4636-8024-e00df20e843b\", \"42fcb56… #> $ collection_url        <chr> \"https://cellxgene.cziscience.com/collections/1c… #> $ consortia             <list> [\"Allen Institute for Brain Science\", \"SEA-AD\"]… #> $ contact_email         <chr> \"edl@alleninstitute.org\", \"chenc6@email.chop.edu… #> $ contact_name          <chr> \"Ed Lein\", \"Changya Chen\", \"Kimberly A. Aldinger… #> $ curator_name          <chr> \"Jason Hilton\", \"Jennifer Yu-Sheng Chien\", \"Batu… #> $ description           <chr> \"The Seattle Alzheimer's Disease Brain Cell Atla… #> $ doi                   <chr> \"10.1101/2023.05.08.539485\", \"10.1182/blood.2021… #> $ links                 <list> [[\"UW Alzheimer's Disease Research Center\", \"OT… #> $ name                  <chr> \"SEA-AD: Seattle Alzheimer’s Disease Brain Cell … #> $ publisher_metadata    <list> [[[\"Gabitto\", \"Mariano I.\"], [\"Travaglini\", \"Ky… #> $ revising_in           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ revision_of           <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ visibility            <chr> \"PUBLIC\", \"PUBLIC\", \"PUBLIC\", \"PUBLIC\", \"PUBLIC\"… #> $ created_at            <date> 2023-10-17, 2023-10-18, 2023-10-19, 2023-08-22,… #> $ published_at          <date> 2022-05-31, 2023-10-18, 2023-08-31, 2021-02-17,… #> $ revised_at            <date> 2023-10-20, NA, 2023-10-19, 2023-08-22, 2023-08…  datasets(db) |>     dplyr::glimpse() #> Rows: 1,125 #> Columns: 25 #> $ dataset_id                 <chr> \"fc0ceb80-d2d9-47c1-9d78-b0e45c64c500\", \"f6… #> $ dataset_version_id         <chr> \"d9e98068-b506-4344-8cc4-d0dbf85b429e\", \"33… #> $ collection_id              <chr> \"1ca90a2d-2943-483d-b678-b809bf464c30\", \"1c… #> $ donor_id                   <list> [\"H20.33.001\", \"H20.33.040\", \"H21.33.017\",… #> $ assay                      <list> [[\"10x 3' v3\", \"EFO:0009922\"], [\"10x multi… #> $ batch_condition            <list> [\"Specimen ID\"], [\"Specimen ID\"], [\"Specim… #> $ cell_count                 <int> 1877, 9203, 42921, 21443, 45252, 90804, 111… #> $ cell_type                  <list> [[\"sst GABAergic cortical interneuron\", \"C… #> $ development_stage          <list> [[\"29-year-old human stage\", \"HsapDv:00001… #> $ disease                    <list> [[\"dementia\", \"MONDO:0001627\"], [\"normal\",… #> $ explorer_url               <chr> \"https://cellxgene.cziscience.com/e/fc0ceb8… #> $ is_primary_data            <list> [FALSE], [FALSE], [FALSE], [FALSE], [FALSE… #> $ mean_genes_per_cell        <dbl> 5940.915, 5455.155, 4336.968, 5348.802, 788… #> $ organism                   <list> [[\"Homo sapiens\", \"NCBITaxon:9606\"]], [[\"H… #> $ primary_cell_count         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1301107, 0, 0, 0… #> $ schema_version             <chr> \"3.1.0\", \"3.1.0\", \"3.1.0\", \"3.1.0\", \"3.1.0\"… #> $ self_reported_ethnicity    <list> [[\"Asian\", \"HANCESTRO:0008\"], [\"European\",… #> $ sex                        <list> [[\"female\", \"PATO:0000383\"], [\"male\", \"PAT… #> $ suspension_type            <list> [\"nucleus\"], [\"nucleus\"], [\"nucleus\"], [\"n… #> $ tissue                     <list> [[\"dorsolateral prefrontal cortex\", \"UBERO… #> $ title                      <chr> \"Sst Chodl - DLPFC: Seattle Alzheimer's Dis… #> $ tombstone                  <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F… #> $ x_approximate_distribution <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ published_at               <date> 2023-07-27, 2022-05-31, 2022-05-31, 2022-0… #> $ revised_at                 <date> 2023-08-22, 2023-10-20, 2023-10-20, 2023-1…  # \\donttest{ if (interactive()) {     ## visualize the first dataset     datasets(db) |>         dplyr::slice(1) |>         datasets_visualize() } # } files(db) |>     dplyr::glimpse() #> Rows: 2,231 #> Columns: 4 #> $ dataset_id <chr> \"fc0ceb80-d2d9-47c1-9d78-b0e45c64c500\", \"fc0ceb80-d2d9-47c1… #> $ filesize   <dbl> 73375840, 58660235, 234660104, 259116909, 866819000, 925519… #> $ filetype   <chr> \"H5AD\", \"RDS\", \"H5AD\", \"RDS\", \"H5AD\", \"RDS\", \"H5AD\", \"RDS\",… #> $ url        <chr> \"https://datasets.cellxgene.cziscience.com/d9e98068-b506-43…  if (FALSE) { files(db) |>     dplyr::slice(1) |>     files_download(dry.run = FALSE) }  ## common links to external data links(db) |>     dplyr::count(link_type) #> # A tibble: 5 × 2 #>   link_type       n #>   <chr>       <int> #> 1 DATA_SOURCE    33 #> 2 LAB_WEBSITE    36 #> 3 OTHER         315 #> 4 PROTOCOL       42 #> 5 RAW_DATA      259  ## authors per collection authors() |>     dplyr::count(collection_id, sort = TRUE) #> # A tibble: 161 × 2 #>    collection_id                            n #>    <chr>                                <int> #>  1 e5f58829-1a66-40b5-a624-9046778e74f5   221 #>  2 8f126edf-5405-4731-8374-b5ce11f53e82   205 #>  3 bcb61471-2a44-4d00-a0af-ff085512674c   171 #>  4 4f586cb6-972b-4ef7-a4ef-3c3800a3c004   147 #>  5 0b9d8a04-bb9d-44da-aa27-705bb65b54eb   135 #>  6 367d95c0-0eb0-4dae-8276-9407239421ee   106 #>  7 6f6d381a-7701-4781-935c-db10d30de293    98 #>  8 1ca90a2d-2943-483d-b678-b809bf464c30    94 #>  9 0a839c4b-10d0-4d64-9272-684c49a2c8ba    90 #> 10 ae1420fe-6630-46ed-8b3d-cc6056a66467    83 #> # ℹ 151 more rows  publisher_metadata() |>     dplyr::glimpse() #> Rows: 161 #> Columns: 9 #> $ collection_id   <chr> \"1ca90a2d-2943-483d-b678-b809bf464c30\", \"10ec9198-584e… #> $ name            <chr> \"SEA-AD: Seattle Alzheimer’s Disease Brain Cell Atlas\"… #> $ is_preprint     <lgl> TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,… #> $ journal         <chr> \"bioRxiv\", \"Blood\", \"Nat Neurosci\", \"Nature\", \"Cell Ge… #> $ published_at    <date> 2023-05-09, 2022-04-07, 2021-08-01, 2021-10-07, 2023-… #> $ published_year  <int> 2023, 2022, 2021, 2021, 2023, 2021, 2022, 2021, 2020, … #> $ published_month <int> 5, 4, 8, 10, 6, 3, 5, 12, 8, 7, 10, 4, 4, 12, 3, 12, 1… #> $ published_day   <int> 9, 7, 1, 7, 1, 12, 13, 1, 1, 3, 7, 21, 1, 1, 1, 14, 1,… #> $ doi             <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…"},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-18","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.8","title":"cellxgenedp 1.8","text":"(v 1.7.1) Update vignette section dataset visualization accomodate changes ‘Discover’ API. https://github.com/mtmorgan/cellxgenedp/issues/15","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-16","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.6","title":"cellxgenedp 1.6","text":"(v 1.5.2) use CELLxGENE ‘Discover’ API, changing column names return values. See ‘API changes’ ‘Discover download datasets…’ vignette.","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-14","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.4","title":"cellxgenedp 1.4","text":"SIGNIFICANT USER-VISIBLE CHANGES (v 1.3.3) add publisher_metadata(), authors(), links() make access nested ‘collections()’ data straight-forward","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-12","dir":"Changelog","previous_headings":"","what":"cellxgenedp 1.2","title":"cellxgenedp 1.2","text":"SIGNIFICANT USER-VISIBLE CHANGES (v. 1.1.4) allow custom files_download() cache. Thanks @stemangiola, https://github.com/mtmorgan/cellxgenedp/pull/9 (v. 1.1.6) datasets ethnicity field renamed self_reported_ethnicity (v. 1.1.7) use zellkonverter’s basilisk-based Python parser read H5AD files vignette, see https://github.com/theislab/zellkonverter/issues/78 (v. 1.1.2) reset cache build machines weekly (v. 1.1.6) use {rjsoncons} CRAN package queries, rather local implementation. Thanks @LiNk-NY, https://github.com/mtmorgan/cellxgenedp/pull/12","code":""},{"path":"https://mtmorgan.github.io/cellxgenedp/news/index.html","id":"cellxgenedp-007","dir":"Changelog","previous_headings":"","what":"cellxgenedp 0.0.7","title":"cellxgenedp 0.0.7","text":"(v. 0.0.7) make errors local cache update accessible; see https://github.com/mtmorgan/cellxgenedp/issues/1","code":""}]
